homeassistant:
  # Name of the location where Home Assistant is running
  name: Pi3
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Amsterdam

#frontend:


rflink:
    port: /dev/serial/by-id/usb-Arduino__www.arduino.cc__0042_557313234363512101D2-if00
    wait_for_ack: False
    reconnect_interval: 10

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
#updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true


# Allows you to issue voice commands from the frontend in enabled browsers
#conversation:

config:

# Discover some devices automatically
discovery:

# Enables support for tracking state changes over time.
#history:

# View all events in a logbook
#logbook:

# Track the sun
#sun:

# Weather Prediction
#sensor:
#  platform: yr

sensor:
  - platform: dht
    sensor: AM2302
    pin: 4
    monitored_conditions:
      - temperature
      - humidity
  - platform: rflink
    automatic_add: true

binary_sensor:
  - platform: rpi_gpio
    ports:
        23: PIR


shell_command:
    technofire: 'sudo /home/homeautomation/homeassistant/scripts/technofire/technofire.sh {{ scene.replace(" ","_") | lower }} {{ brightness }}'

automation:
  - id: technofire_json
    alias: Technofire JSON
    trigger:
        platform: mqtt
        topic: "home/technofire/pi3/jsonset"
    action:
        - service: shell_command.technofire
          data_template:
             scene: '{{ trigger.payload_json.scene }}'
             brightness: '{{ trigger.payload_json.brightness }}'
        - service: mqtt.publish
          data_template:
              topic: "home/technofire/pi3/state"
              payload: '{% if trigger.payload_json.scene == "off" %}OFF{% else %}ON{% endif %}'
  - id: technofire
    alias: Technofire
    trigger:
        platform: mqtt
        topic: "home/technofire/pi3/set/#"
    action:
        - service: shell_command.technofire
          data_template:
             scene: '{% if trigger.payload == "OFF" %}off{% else %}{{ trigger.topic.split("/")[-2] }}{% endif %}'
             brightness: '{% if trigger.payload == "OFF" %}0{% else %}{{ trigger.topic.split("/")[-1] }}{% endif %}'
        - service: mqtt.publish
          data_template:
              topic: "home/technofire/pi3/state"
              payload: '{% if trigger.topic.split("/")[-2] == "off" or trigger.payload == "OFF" %}OFF{% else %}ON{% endif %}'
  - id: s2m_pir
    alias: s2m_pir
    trigger:
        - platform: state
          entity_id: binary_sensor.pir
        - platform: homeassistant
          event: start
        - platform: mqtt
          topic: home/poll
    action:
        service: mqtt.publish
        data:
            topic: "home/binary_sensor/pir_living_room"
            payload_template: "{{ states('binary_sensor.pir') | upper }}"
  - id: s2m_dht_sensor_temperature
    alias: s2m_dht_sensor_temperature
    trigger:
        - platform: state
          entity_id: sensor.dht_sensor_temperature
        - platform: homeassistant
          event: start
        - platform: mqtt
          topic: home/poll
    action:
        service: mqtt.publish
        data:
            topic: "home/sensor/temperature_living_room"
            payload_template: "{{ states('sensor.dht_sensor_temperature') }}"
  - id: s2m_dht_sensor_humidity
    alias: s2m_dht_sensor_humidity
    trigger:
        - platform: state
          entity_id: sensor.dht_sensor_humidity
        - platform: homeassistant
          event: start
        - platform: mqtt
          topic: home/poll
    action:
        service: mqtt.publish
        data:
            topic: "home/sensor/humidity_living_room"
            payload_template: "{{ states('sensor.dht_sensor_humidity') }}"
#MQTT
mqtt:
    broker: 192.168.0.1
    port: 8883
    certificate: /etc/ssl/certs/ca-certificates.crt
    tls_insecure: true #allow non-matching hostnames
    tls_version: '1.2'
    client_id: pi3
    keepalive: 60
    username: homeassistant
    password: !secret api_password

#mqtt_eventstream:
#  publish_topic: slaves/pi3
#  subscribe_topic: master
