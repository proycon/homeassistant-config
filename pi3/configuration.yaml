homeassistant:
  # Name of the location where Home Assistant is running
  name: Pi3
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Amsterdam

#just for debugging:
http:

frontend:


rflink:
    port: /dev/serial/by-id/usb-Arduino__www.arduino.cc__0042_557313234363512101D2-if00
    wait_for_ack: False
    reconnect_interval: 10


# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
#updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true


# Allows you to issue voice commands from the frontend in enabled browsers
#conversation:

config:

# Discover some devices automatically
discovery:

# Enables support for tracking state changes over time.
#history:

# View all events in a logbook
#logbook:
#

logger:
  default: info
  logs:
    rflink: debug
    homeassistant.components.rflink: debug

# Track the sun
#sun:

# Weather Prediction
#sensor:
#  platform: yr

sensor:
  - platform: dht
    sensor: AM2302
    pin: 4
    monitored_conditions:
      - temperature
      - humidity
  - platform: mhz19
    name: mhz19
    serial_device: /dev/ttyAMA0
  - platform: rflink
    automatic_add: true
    devices:
        dkw2012_0054_hum:
            sensor_type: humidity
        dkw2012_0054_winsp:
            sensor_type: windspeed
        dkw2012_0054_wings:
            sensor_type: windgusts
        dkw2012_0054_windir:
            sensor_type: winddirection
        dkw2012_0054_rain:
            sensor_type: total_rain
        dkw2012_0054_temp:
            sensor_type: temperature
        dkw2012_0054_update_time:
            sensor_type: timestamp

binary_sensor:
  - platform: rpi_gpio
    ports:
        23: PIR


shell_command:
    technofire: 'sudo /home/homeautomation/homeassistant/scripts/technofire/technofire.sh --brightness {{ brightness }} --iter {{ iterations }} {{ scene.replace(" ","_") | lower }}'

automation:
  - id: technofire_json
    alias: Technofire JSON
    trigger:
        platform: mqtt
        topic: "home/technofire/pi3/jsonset"
    action:
        - service: shell_command.technofire
          data_template:
             scene: '{{ trigger.payload_json.scene }}'
             brightness: '{{ trigger.payload_json.brightness }}'
             iterations: '{{ trigger.payload_json.iterations | default(0) }}'
        - service: mqtt.publish
          data_template:
              topic: "home/technofire/pi3/state"
              payload: '{% if trigger.payload_json.scene == "off" %}OFF{% else %}ON{% endif %}'
  - id: technofire
    alias: Technofire
    trigger:
        platform: mqtt
        topic: "home/technofire/pi3/set/#"
    action:
        - service: shell_command.technofire
          data_template:
             scene: '{% if trigger.payload == "OFF" %}off{% else %}{{ trigger.topic.split("/")[-2] }}{% endif %}'
             brightness: '{% if trigger.payload == "OFF" %}0{% else %}{{ trigger.topic.split("/")[-1] }}{% endif %}'
             iterations: 0
        - service: mqtt.publish
          data_template:
              topic: "home/technofire/pi3/state"
              payload: '{% if trigger.topic.split("/")[-2] == "off" or trigger.payload == "OFF" %}OFF{% else %}ON{% endif %}'
  - id: s2m_pir
    alias: s2m_pir
    trigger:
        - platform: state
          entity_id: binary_sensor.pir
        - platform: homeassistant
          event: start
        - platform: mqtt
          topic: home/poll
    action:
        service: mqtt.publish
        data:
            topic: "home/binary_sensor/pir_living_room"
            payload_template: "{{ states('binary_sensor.pir') | upper }}"
  - id: s2m_dht_sensor_temperature
    alias: s2m_dht_sensor_temperature
    trigger:
        - platform: state
          entity_id: sensor.dht_sensor_temperature
        - platform: homeassistant
          event: start
        - platform: mqtt
          topic: home/poll
    action:
        service: mqtt.publish
        data:
            topic: "home/sensor/temperature_living_room"
            payload_template: "{{ states('sensor.dht_sensor_temperature') }}"
  - id: s2m_dht_sensor_humidity
    alias: s2m_dht_sensor_humidity
    trigger:
        - platform: state
          entity_id: sensor.dht_sensor_humidity
        - platform: homeassistant
          event: start
        - platform: mqtt
          topic: home/poll
    action:
        service: mqtt.publish
        data:
            topic: "home/sensor/humidity_living_room"
            payload_template: "{{ states('sensor.dht_sensor_humidity') }}"
  - id: s2m_co2
    alias: s2m_co2
    trigger:
        - platform: state
          entity_id: sensor.mhz19_co2
        - platform: homeassistant
          event: start
        - platform: mqtt
          topic: home/poll
    action:
        service: mqtt.publish
        data:
            topic: "home/sensor/co2_living_room"
            payload_template: "{{ states('sensor.mhz19_co2') }}"
  - id: s2m_weatherstation_rain
    alias: s2m_weatherstation_rain
    trigger:
        - platform: state
          entity_id: sensor.dkw2012_0054_rain
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/weatherstation/rain"
            payload: "{{ states('sensor.dkw2012_0054_rain')}}"
  - id: s2m_weatherstation_temp
    alias: s2m_weatherstation_temp
    trigger:
        - platform: state
          entity_id: sensor.dkw2012_0054_temp
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/weatherstation/temp"
            payload: "{{ states('sensor.dkw2012_0054_temp') }}"
  - id: s2m_weatherstation_hum
    alias: s2m_weatherstation_hum
    trigger:
        - platform: state
          entity_id: sensor.dkw2012_0054_hum
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/weatherstation/hum"
            payload: "{{ states('sensor.dkw2012_0054_hum') }}"
  - id: s2m_weatherstation_winddir
    alias: s2m_weatherstation_winddir
    trigger:
        - platform: state
          entity_id: sensor.dkw2012_0054_windir
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/weatherstation/winddir"
            payload: "{{ states('sensor.dkw2012_0054_windir') }}"
  - id: s2m_weatherstation_winsp
    alias: s2m_weatherstation_winsp
    trigger:
        - platform: state
          entity_id: sensor.dkw2012_0054_winsp
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/weatherstation/windspeed"
            payload: "{{ states('sensor.dkw2012_0054_winsp')  }}"
  - id: s2m_weatherstation_wings
    alias: s2m_weatherstation_wings
    trigger:
        - platform: state
          entity_id: sensor.dkw2012_0054_wings
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/weatherstation/windgustspeed"
            payload: "{{ states('sensor.dkw2012_0054_wings') }}"
  - id: s2m_weatherstation_lastupdate
    alias: s2m_weatherstation_lastupdate
    trigger:
        - platform: state
          entity_id: sensor.dkw2012_0054_update_time
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/weatherstation/lastupdate"
            payload: "{{ states('sensor.dkw2012_0054_update_time') }}"
#MQTT
mqtt:
    broker: 192.168.0.1
    port: 8883
    certificate: /etc/ssl/certs/ca-certificates.crt
    tls_insecure: true #allow non-matching hostnames
    tls_version: '1.2'
    client_id: pi3
    keepalive: 60
    username: homeassistant
    password: !secret api_password

#mqtt_eventstream:
#  publish_topic: slaves/pi3
#  subscribe_topic: master
