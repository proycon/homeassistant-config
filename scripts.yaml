repoll_slaves:
    alias: Repoll slaves
    sequence:
      - service: mqtt.publish #trigger RPi slaves to send their known statusses again
        data:
            topic: "home/poll"
            payload: "ON"

reset_lights:
    alias: Reset Lights
    sequence:
        - service: switch.turn_off
          data:
              entity_id: switch.bedroom
        - wait_template: "{{ states('switch.bedroom') == 'off' }}"
          timeout: "00:00:05"
        - service: script.turn_on
          data_template:
              entity_id: "script.lights_{% if is_state('sun.sun','below_horizon') %}on{% else %}off{% endif %}"
        - service: script.turn_on
          entity_id: script.reset_outside_lights

lights_on:
    alias: Lights on
    sequence:
        - service: switch.turn_on
          entity_id: switch.tv_spots
        - wait_template: "{{ states('switch.tv_spots') == 'on' }}"
          timeout: "00:00:05"
        - delay: "00:00:01"
        - service: switch.turn_on
          entity_id: switch.back_corner
        - wait_template: "{{ states('switch.back_corner') == 'on' }}"
          timeout: "00:00:05"
        - delay: "00:00:01"
        - service: switch.turn_on
          entity_id: switch.back_room
        - wait_template: "{{ states('switch.back_room') == 'on' }}"
          timeout: "00:00:05"
        - delay: "00:00:01"
        - service: switch.turn_on
          entity_id: switch.front_room
        - wait_template: "{{ states('switch.front_room') == 'on' }}"
          timeout: "00:00:05"
        - delay: "00:00:01"
        - service: switch.turn_on
          entity_id: switch.midspots
        - wait_template: "{{ states('switch.midspots') == 'on' }}"
          timeout: "00:00:05"
lights_off:
    alias: Lights off
    sequence:
        - service: switch.turn_off
          entity_id: switch.tv_spots
        - wait_template: "{{ states('switch.tv_spots') == 'off' }}"
          timeout: "00:00:05"
        - delay: "00:00:01"
        - service: switch.turn_off
          entity_id: switch.back_corner
        - wait_template: "{{ states('switch.back_corner') == 'off' }}"
          timeout: "00:00:05"
        - delay: "00:00:01"
        - service: switch.turn_off
          entity_id: switch.back_room
        - delay: "00:00:01"
        - wait_template: "{{ states('switch.back_room') == 'off' }}"
          timeout: "00:00:05"
        - delay: "00:00:01"
        - service: switch.turn_off
          entity_id: switch.front_room
        - wait_template: "{{ states('switch.front_room') == 'off' }}"
          timeout: "00:00:05"
        - delay: "00:00:01"
        - service: switch.turn_off
          entity_id: switch.midspots
        - wait_template: "{{ states('switch.midspots') == 'off' }}"
          timeout: "00:00:05"
        - delay: "00:00:01"
        - service: switch.turn_off
          entity_id: switch.kitchen
        - wait_template: "{{ states('switch.kitchen') == 'off' }}"
          timeout: "00:00:05"
        - delay: "00:00:01"
        - service: switch.turn_off
          entity_id: switch.office
        - wait_template: "{{ states('switch.office') == 'off' }}"
          timeout: "00:00:05"
        - delay: "00:00:01"
        - service: switch.turn_off
          entity_id: switch.hall
        - wait_template: "{{ states('switch.hall') == 'off' }}"
          timeout: "00:00:05"
        - delay: "00:00:01"
        - service: script.turn_on
          entity_id: script.extinguish_fireplace
        - service: script.turn_on
          entity_id: script.extinguish_dresser_ambilight
        - service: script.turn_on
          entity_id: script.extinguish_bedroom_ambilight
        - service: switch.turn_off
          entity_id: switch.garden
        - wait_template: "{{ states('switch.garden') == 'off' }}"
          timeout: "00:00:05"
        - delay: "00:00:01"
        - service: switch.turn_off
          entity_id: switch.balcony
        - wait_template: "{{ states('switch.balcony') == 'off' }}"
          timeout: "00:00:05"
        - delay: "00:00:01"
        - service: switch.turn_off
          entity_id: switch.roof
        - wait_template: "{{ states('switch.roof') == 'off' }}"
          timeout: "00:00:05"
avr_volup:
    alias: Volume up (AVR)
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"avr","key":"KEY_VOLUMEUP"}'
avr_voldown:
    alias: Volume down (AVR)
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"avr","key":"KEY_VOLUMEDOWN"}'
avr_mute:
    alias: Mute (AVR)
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"avr","key":"KEY_MUTE"}'
avr_power:
    alias: Power (AVR) #replace with switch?
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"avr","key":"KEY_POWER"}'
tvdecoder_channelup:
    alias: Channel up
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"CHANNEL_UP"}'
      - condition: state
        entity_id: switch.tv
        state: 'off'
      - service: script.turn_on
        entity_id: script.watch_tv
tvdecoder_channeldown:
    alias: Channel down
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"CHANNEL_DOWN"}'
tvdecoder_playpause:
    alias: Play/pause Toggle
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"PLAY_PAUSE"}'
tvdecoder_ok:
    alias: OK
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"OK"}'
tvdecoder_back:
    alias: Back
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"BACK"}'
tvdecoder_down:
    alias: Down
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"down"}'
tvdecoder_up:
    alias: Up
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"UP"}'
tvdecoder_left:
    alias: left
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"LEFT"}'
tvdecoder_right:
    alias: right
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"RIGHT"}'
tvdecoder_1:
    alias: 1
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_1"}'
tvdecoder_2:
    alias: 2
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
tvdecoder_3:
    alias: 3
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_3"}'
tvdecoder_4:
    alias: 4
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_1"}'
tvdecoder_5:
    alias: 5
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_5"}'
tvdecoder_6:
    alias: 6
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
tvdecoder_7:
    alias: 7
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_7"}'
tvdecoder_8:
    alias: 8
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_8"}'
tvdecoder_9:
    alias: 9
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
tvdecoder_0:
    alias: 0
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_0"}'
tvdecoder_npo1:
    alias: TV Channel - NPO1
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_1"}'
tvdecoder_npo2:
    alias: TV Channel - NPO2
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
tvdecoder_npo3:
    alias: TV Channel - NPO3
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_3"}'
tvdecoder_rtl4:
    alias: TV Channel - RTL4
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
tvdecoder_veronica:
    alias: TV Channel - Veronica
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
tvdecoder_een:
    alias: TV Channel - Één
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
tvdecoder_canvas:
    alias: TV Channel - Canvas
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_3"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_0"}'
tvdecoder_bbc1st:
    alias: TV Channel - BBC First
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_5"}'
tvdecoder_bbc1:
    alias: TV Channel - BBC One
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
tvdecoder_bbc2:
    alias: TV Channel - BBC Two
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_7"}'
tvdecoder_ard:
    alias: TV Channel - ARD
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_5"}'
tvdecoder_zdf:
    alias: TV Channel - ZDF
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
tvdecoder_wdr:
    alias: TV Channel - WDR
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_8"}'
tvdecoder_arte:
    alias: TV Channel - Arte
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
tvdecoder_tv5monde:
    alias: TV Channel - TV 5 Monde
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
tvdecoder_antena3:
    alias: TV Channel - Antena 3
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_5"}'
      - delay:
            milliseconds: 400
tvdecoder_rai1:
    alias: TV Channel - Rai 1
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
      - delay:
            milliseconds: 400
tvdecoder2_channelup:
    alias: Channel up
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"CHANNEL_UP"}'
      - condition: state
        entity_id: switch.tv_bedroom
        state: 'off'
      - service: script.turn_on
        entity_id: script.watch_tv_bedroom
tvdecoder2_channeldown:
    alias: Channel down
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"CHANNEL_DOWN"}'
tvdecoder2_playpause:
    alias: Play/pause Toggle
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"PLAY_PAUSE"}'
tvdecoder2_ok:
    alias: OK
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"OK"}'
tvdecoder2_back:
    alias: Back
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"BACK"}'
tvdecoder2_down:
    alias: Down
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"down"}'
tvdecoder2_up:
    alias: Up
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"UP"}'
tvdecoder2_left:
    alias: left
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"LEFT"}'
tvdecoder2_right:
    alias: right
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"RIGHT"}'
tvdecoder2_1:
    alias: 1
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_1"}'
tvdecoder2_2:
    alias: 2
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
tvdecoder2_3:
    alias: 3
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_3"}'
tvdecoder2_4:
    alias: 4
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_1"}'
tvdecoder2_5:
    alias: 5
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_5"}'
tvdecoder2_6:
    alias: 6
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
tvdecoder2_7:
    alias: 7
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_7"}'
tvdecoder2_8:
    alias: 8
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_8"}'
tvdecoder2_9:
    alias: 9
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
tvdecoder2_0:
    alias: 0
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_0"}'
tvdecoder2_npo1:
    alias: TV Channel - NPO1
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_1"}'
tvdecoder2_npo2:
    alias: TV Channel - NPO2
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
tvdecoder2_npo3:
    alias: TV Channel - NPO3
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_3"}'
tvdecoder2_rtl4:
    alias: TV Channel - RTL4
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
tvdecoder2_veronica:
    alias: TV Channel - Veronica
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
tvdecoder2_een:
    alias: TV Channel - Één
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
tvdecoder2_canvas:
    alias: TV Channel - Canvas
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_3"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_0"}'
tvdecoder2_bbc1st:
    alias: TV Channel - BBC First
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_5"}'
      - delay:
            milliseconds: 400
tvdecoder2_bbc1:
    alias: TV Channel - BBC One
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
tvdecoder2_bbc2:
    alias: TV Channel - BBC Two
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_7"}'
tvdecoder2_ard:
    alias: TV Channel - ARD
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_5"}'
tvdecoder2_zdf:
    alias: TV Channel - ZDF
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
tvdecoder2_wdr:
    alias: TV Channel - WDR
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_8"}'
tvdecoder2_arte:
    alias: TV Channel - Arte
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
tvdecoder2_tv5monde:
    alias: TV Channel - TV 5 Monde
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
tvdecoder2_antena3:
    alias: TV Channel - Antena 3
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_5"}'
      - delay:
            milliseconds: 400
tvdecoder2_rai1:
    alias: TV Channel - Rai 1
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
      - delay:
            milliseconds: 400
doorbell_sound:
    alias: Doorbell sound
    sequence:
      - service: media_player.play_media
        data:
            entity_id: media_player.hall_speaker
            media_content_id: file:///home/homeautomation/homeassistant/media/doorbell.ogg
            media_content_type: 'music'
      - service: mqtt.publish
        data_template:
            topic: "home/sound/everywhere"
            payload_template: 'doorbell.ogg'
dog_sound:
    alias: Dog sound
    sequence:
        - service: media_player.play_media
          data:
              entity_id: media_player.hall_speaker
              media_content_id: file:///home/homeautomation/homeassistant/media/dog.wav
              media_content_type: 'music'
chime_sound:
    alias: Chime sound
    sequence:
        - service: media_player.play_media
          data:
              entity_id: media_player.hall_speaker
              media_content_id: file:///home/homeautomation/homeassistant/media/chime.wav
              media_content_type: 'music'


trigger_alarm_manually:
    alias: Trigger Alarm Manually
    sequence:
        - service: alarm_control_panel.alarm_trigger
          entity_id: alarm_control_panel.alarm_system

alarm:
    alias: Alarm
    sequence:
        - service: script.turn_on #loop
          entity_id: script.alarm_iteration
alarm_iteration:
    alias: Alarm Iteration
    sequence:
        - service: media_player.play_media
          data:
              entity_id: media_player.hall_speaker
              media_content_id: file:///home/homeautomation/homeassistant/media/redalert.ogg
              media_content_type: 'music'
        - condition: state
          entity_id: alarm_control_panel.alarm_system
          state: 'triggered'
        - service: script.turn_on #loop
          entity_id: script.alarm

ipcam_topreset:
    alias: Camera to preset
    sequence:
        - service: rest_command.ipcam_topreset
          data_template:
              ipcam_ip: !secret ipcam_ip
              ipcam_user: !secret ipcam_user
              ipcam_password: !secret ipcam_password
              preset: '{{ states.input_select.ipcam_direction.state }}'
ignite_fireplace:
    alias: Ignite Fireplace
    sequence:
      - service: mqtt.publish
        data_template:
            topic: "home/technofire/pi3/jsonset"
            payload_template: '{"scene":"{{ states.input_select.fireplace.state.replace(" ","_") |lower }}","brightness":"{{ states.input_number.fireplace_brightness.state|int }}"}'
extinguish_fireplace:
    alias: Extinguish Fireplace
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/technofire/pi3/jsonset"
            payload: '{"scene":"off","brightness":"0"}'
ignite_dresser_ambilight:
    alias: Ignite dresser ambilight
    sequence:
      - service: mqtt.publish
        data_template:
            topic: "home/technofire/pi2/jsonset"
            payload_template: '{"scene":"{{ states.input_select.dresser_ambilight.state.replace(" ","_") |lower }}","brightness":"{{ states.input_number.dresser_ambilight_brightness.state|int }}"}'
extinguish_dresser_ambilight:
    alias: Extinguish dresser ambilight
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/technofire/pi2/jsonset"
            payload: '{"scene":"off","brightness":"0"}'
ignite_bedroom_ambilight:
    alias: Ignite bedroom ambilight
    sequence:
      - service: mqtt.publish
        data_template:
            topic: "home/technofire/pi4/jsonset"
            payload_template: '{"scene":"{{ states.input_select.bedroom_ambilight.state.replace(" ","_") |lower }}","brightness":"{{ states.input_number.bedroom_ambilight_brightness.state|int }}"}'
extinguish_bedroom_ambilight:
    alias: Extinguish bedroom ambilight
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/technofire/pi4/jsonset"
            payload: '{"scene":"off","brightness":"0"}'

reset_ipcam:
    alias: Reset IPcam
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.ipcam_direction
          option: "achter"


home_notification_lights:
  alias: Home Notification Lights
  sequence:
    - condition: state
      entity_id: timer.home_notification_lights
      state: "idle"
    - service: timer.start
      entity_id: timer.home_notification_lights
    - service: switch.turn_on
      entity_id: switch.porch
    - wait_template: "{{ states('switch.porch') == 'on' }}"
      timeout: "00:00:05"
    - service: switch.turn_on
      entity_id: switch.hall
    - service: script.turn_on
      entity_id: script.green_lights
    - wait_template: "{{ states('switch.hall') == 'on' }}"
      timeout: "00:00:05"
    - service: switch.turn_on
      entity_id: switch.garden
    - wait_template: "{{ states('switch.garden') == 'on' }}"
      timeout: "00:00:05"
    - service: switch.turn_on
      entity_id: switch.back_room

reset_outside_lights:
    alias: Reset Outside Lights
    sequence:
        - service_template: "switch.turn_{% if is_state('sun.sun','below_horizon') and (states.sensor.time.state[:2]|int > 6) and (states.sensor.time.state[:2]|int <= 23) %}on{% else %}off{% endif %}"
          data:
              entity_id:
                - switch.porch
        - delay:
            seconds: 2
        - service_template: "switch.turn_{% if is_state('sun.sun','below_horizon') and (states.sensor.time.state[:2]|int > 6) %}on{% else %}off{% endif %}"
          data:
              entity_id:
                - switch.garden
        - service: switch.turn_off
          data:
            entity_id: switch.roof
        - delay:
            seconds: 2

watch_tv:
    alias: Watch TV
    sequence:
        - service: mqtt.publish
          data:
              topic: "home/say/pi1"
              payload: "Starting TV"
        - service: switch.turn_on
          entity_id: switch.tv
        - delay:
            seconds: 1
        - service: media_player.turn_on
          entity_id: media_player.yamaha_receiver
        - delay:
            seconds: 10
        - service: switch.turn_on
          entity_id: switch.tv_decoder
        - delay:
            seconds: 1
        - service: media_player.select_source
          entity_id: media_player.yamaha_receiver
          data:
              source: HDMI1

listen_to_music:
    alias: Listen to Music
    sequence:
        - service: mqtt.publish
          data:
              topic: "home/say/pi1"
              payload: "Starting Music"
        - service: media_player.turn_on
          entity_id: media_player.yamaha_receiver
        - service: switch.turn_off
          entity_id: switch.pi1_desktop
        - service: switch.turn_off
          entity_id: switch.pi1_kodi
        - delay:
            seconds: 1
        - service: media_player.select_source
          entity_id: media_player.yamaha_receiver
          data:
              source: HDMI2
        - delay:
            seconds: 1
        - service: switch.turn_on
          entity_id: switch.pi1_music_player

listen_to_music_bedroom:
    alias: Listen to Music 2
    sequence:
        - service: mqtt.publish
          data:
              topic: "home/say/pi2"
              payload: "Starting Music"
        - service: switch.turn_off
          entity_id: switch.pi2_desktop
        - service: switch.turn_off
          entity_id: switch.pi2_kodi
        - service: switch.turn_on
          entity_id: switch.pi2_music_player
load_music:
    alias: Load Music
    sequence:
        - service: mqtt.publish
          data:
              topic: "home/say/pi1"
              payload: "Loading Music"
        - service: shell_command.mpcclear
        - service: shell_command.mpc
          data_template:
              type: "{{states.input_select.mpc_type.state}}"
              value: "{{states.input_text.mpc_search.state}}"
              filter: "{{states.input_select.mpc_filter.state}}"


media_centre:
    alias: Media Centre
    sequence:
        - service: mqtt.publish
          data:
              topic: "home/say/pi1"
              payload: "Starting Media Centre"
        - service: switch.turn_on
          entity_id: switch.tv
        - delay:
            seconds: 1
        - service: media_player.turn_on
          entity_id: media_player.yamaha_receiver
        - service: switch.turn_off
          entity_id: switch.pi1_desktop
        - delay:
            seconds: 1
        - service: media_player.select_source
          entity_id: media_player.yamaha_receiver
          data:
              source: HDMI2
        - condition: state
          entity_id: switch.pi1_kodi
          state: 'off'
        - service: switch.turn_on
          entity_id: switch.pi1_kodi

videoplayer:
    alias: Video player 
    sequence:
        - service: switch.turn_on
          entity_id: switch.tv
        - delay:
            seconds: 1
        - service: mqtt.publish
          data_template:
            topic: "home/sound/pi1"
            payload_template: 'computerbeep_5.wav'
        - service: media_player.turn_on
          entity_id: media_player.yamaha_receiver
        - service: switch.turn_off
          entity_id: switch.pi1_desktop
        - service: switch.turn_off
          entity_id: switch.pi1_kodi
        - delay:
            seconds: 1
        - service: media_player.select_source
          entity_id: media_player.yamaha_receiver
          data:
              source: HDMI2



desktop:
    alias: Desktop
    sequence:
        - service: mqtt.publish
          data:
              topic: "home/say/pi1"
              payload: "Starting Desktop"
        - service: switch.turn_on
          entity_id: switch.tv
        - service: media_player.turn_on
          entity_id: media_player.yamaha_receiver
        - service: switch.turn_off
          entity_id: switch.pi1_kodi
        - delay:
            seconds: 1
        - service: media_player.select_source
          entity_id: media_player.yamaha_receiver
          data:
              source: HDMI2
        - service: switch.turn_on
          entity_id: switch.pi1_desktop






turn_media_off:
    alias: Turn media off
    sequence:
    - service: mqtt.publish
      data_template:
        topic: "home/sound/pi1"
        payload_template: 'computerbeep_5.wav'
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.tv
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.tv_decoder
    - service: switch.turn_off
      entity_id: switch.pi1_desktop
    - service: switch.turn_off
      entity_id: switch.pi1_kodi
    - service: switch.turn_off
      entity_id: switch.pi1_music_player
    - service: media_player.media_stop
      entity_id: media_player.mpd
    - delay:
        seconds: 5
    - service: media_player.turn_off
      entity_id: media_player.yamaha_receiver


update_kodi_library:
    alias: Update Kodi Library
    sequence:
      - alias: Call Kodi update
        service: kodi.call_method
        data:
          entity_id: media_player.kodi
          method: VideoLibrary.Scan

watch_tv_bedroom:
    alias: Watch TV (Bedroom)
    sequence:
        - service: switch.turn_on
          entity_id: switch.tv_bedroom
        - delay:
            seconds: 2
        - service: switch.turn_on
          entity_id: switch.tv_decoder_bedroom
        - condition: state
          entity_id: sun.sun
          state: 'below_horizon'
        - service: switch.turn_on
          entity_id: switch.bedroom
       #- delay:
       #    seconds: 5
       #- service: mqtt.publish #start switch source sequence, triggers some "disconnect anynet device notice"
       #  data:
       #     topic: "home/ir_send/pi2"
       #     payload: '{"device":"tvboven","key":"KEY_MODE","state":"on"}'
       #- delay:
       #    seconds: 5
       #- service: mqtt.publish #start switch source sequence again
       #  data:
       #     topic: "home/ir_send/pi2"
       #     payload: '{"device":"tvboven","key":"KEY_MODE","state":"on"}'
       #- delay:
       #    seconds: 2
       #- service: mqtt.publish
       #  data:
       #     topic: "home/ir_send/pi2"
       #     payload: '{"device":"tvboven","key":"KEY_DOWN","state":"on"}'
       #- delay:
       #    seconds: 1
       #- service: mqtt.publish
       #  data:
       #     topic: "home/ir_send/pi2"
       #     payload: '{"device":"tvboven","key":"KEY_DOWN","state":"on"}'
       #- delay:
       #    seconds: 1
       #- service: mqtt.publish
       #  data:
       #     topic: "home/ir_send/pi2"
       #     payload: '{"device":"tvboven","key":"KEY_DOWN","state":"on"}'
       #- delay:
       #    seconds: 1
       #- service: mqtt.publish
       #  data:
       #     topic: "home/ir_send/pi2"
       #     payload: '{"device":"tvboven","key":"KEY_OK","state":"on"}'




media_centre_bedroom:
    alias: Media Centre Bedroom
    sequence:
        - service: mqtt.publish
          data_template:
            topic: "home/sound/pi2"
            payload_template: 'computerbeep_5.wav'
        - service: switch.turn_on
          entity_id: switch.tv_bedroom
        - service: switch.turn_off
          entity_id: switch.pi2_desktop
        - delay:
            seconds: 1
          #TODO: select source
        - condition: state
          entity_id: switch.pi2_kodi
          state: 'off'
        - service: switch.turn_on
          entity_id: switch.pi2_kodi

videoplayer_bedroom:
    alias: Video player  bedroom
    sequence:
        - service: mqtt.publish
          data_template:
            topic: "home/sound/pi2"
            payload_template: 'computerbeep_5.wav'
        - service: switch.turn_on
          entity_id: switch.tv_bedroom
        - service: switch.turn_off
          entity_id: switch.pi2_desktop
        - service: switch.turn_off
          entity_id: switch.pi2_kodi

desktop_bedroom:
    alias: Desktop Bedroom
    sequence:
        - service: mqtt.publish
          data_template:
            topic: "home/sound/pi2"
            payload_template: 'computerbeep_5.wav'
        - service: switch.turn_on
          entity_id: switch.tv_bedroom
        - service: switch.turn_off
          entity_id: switch.pi2_kodi
        - delay:
            seconds: 1
        - condition: state
          entity_id: switch.pi2_desktop
          state: 'off'
        - service: switch.turn_on
          entity_id: switch.pi2_desktop

turn_media_off_bedroom:
    alias: Turn media off
    sequence:
    - service: mqtt.publish
      data_template:
        topic: "home/sound/pi2"
        payload_template: 'computerbeep_5.wav'
    - service: switch.turn_off
      entity_id: switch.tv_bedroom
    - service: switch.turn_off
      entity_id: switch.tv_decoder_bedroom
    - service: switch.turn_off
      entity_id: switch.pi2_desktop
    - service: switch.turn_off
      entity_id: switch.pi2_kodi
    - service: switch.turn_off
      entity_id: switch.pi2_music_player

red_alert_lights:
     alias: Red Alert Lights
     sequence:
         - service: input_select.select_option
           data:
               entity_id: input_select.fireplace
               option: Red
         - service: input_number.set_value
           data:
               entity_id: input_number.fireplace_brightness
               value: 255
         - service: input_number.set_value
           data:
               entity_id: input_number.dresser_ambilight_brightness
               value: 255
         - service: input_select.select_option
           data:
               entity_id: input_select.dresser_ambilight
               option: Red
         - delay:
               seconds: 1
         - service: script.turn_on
           entity_id: script.ignite_fireplace
         - service: script.turn_on
           entity_id: script.ignite_dresser_ambilight

green_lights:
     alias: Green Lights
     sequence:
        - service: mqtt.publish
          data_template:
              topic: "home/technofire/pi2/jsonset"
              payload_template: '{"scene":"green_notice","brightness":"255","iterations":"5"}'
        - service: mqtt.publish
          data_template:
              topic: "home/technofire/pi3/jsonset"
              payload_template: '{"scene":"green_notice","brightness":"255","iterations":"5"}'
yellow_lights:
     alias: Yellow Lights
     sequence:
        - service: mqtt.publish
          data_template:
              topic: "home/technofire/pi2/jsonset"
              payload_template: '{"scene":"yellow_notice","brightness":"255","iterations":"5"}'
        - service: mqtt.publish
          data_template:
              topic: "home/technofire/pi3/jsonset"
              payload_template: '{"scene":"yellow_notice","brightness":"255","iterations":"5"}'
        - service: mqtt.publish
          data_template:
              topic: "home/technofire/pi4/jsonset"
              payload_template: '{"scene":"yellow_notice","brightness":"255","iterations":"5"}'

blue_lights:
     alias: Blue Lights
     sequence:
        - service: mqtt.publish
          data_template:
              topic: "home/technofire/pi2/jsonset"
              payload_template: '{"scene":"blue_notice","brightness":"255","iterations":"5"}'


alarm_lights:
     alias: Alarm lights
     sequence:
      - service: mqtt.publish
        data_template:
            topic: "home/technofire/pi2/jsonset"
            payload_template: '{"scene":"redalert","brightness":"255","iterations":"0"}'
      - service: mqtt.publish
        data_template:
            topic: "home/technofire/pi3/jsonset"
            payload_template: '{"scene":"redalert","brightness":"255","iterations":"0"}'
      - service: mqtt.publish
        data_template:
            topic: "home/technofire/pi4/jsonset"
            payload_template: '{"scene":"redalert","brightness":"255","iterations":"0"}'

reset_fireplace:
     alias: Reset Fireplace
     sequence:
     - service: input_select.select_option
       data:
           entity_id: input_select.fireplace
           option: Fire
     - service: input_number.set_value
       data:
           entity_id: input_number.fireplace_brightness
           value: 255
     - service: input_number.set_value
       data:
           entity_id: input_number.dresser_ambilight_brightness
           value: 40
     - service: input_select.select_option
       data:
           entity_id: input_select.dresser_ambilight
           option: Lamp
     - delay:
           seconds: 1
     - service: script.turn_on
       data_template:
           entity_id: "script.{% if is_state('sun.sun','below_horizon') and (states.sensor.time.state[:2]|int > 20) %}ignite{% else %}extinguish{% endif %}_fireplace"
     - service: script.turn_on
       data_template:
           entity_id: "script.{% if is_state('sun.sun','below_horizon') and (states.sensor.time.state[:2]|int > 20) %}ignite{% else %}extinguish{% endif %}_dresser_ambilight"



wake_up_alarm:
    alias: Wake up alarm
    sequence:
        - service: switch.turn_on
          entity_id: switch.bedroom
        - service: mqtt.publish
          data:
              topic: "home/soundoutput/pi2"
              payload: "speakers"
        - delay:
            seconds: 2
        - service: mqtt.publish
          data_template:
                topic: "home/sound/pi2"
                payload_template: 'morningbells_long.ogg'
        - delay:
           minutes: 45
        - service: switch.turn_off
          entity_id: switch.bedroom
       #- service: switch.turn_on
       #  entity_id: switch.tv_bedroom
       #- service: mqtt.publish
       #  data:
       #      topic: "home/wakeup/pi2"
       #      payload: "on"
       #- delay:
       #    minutes: 45
       #- service: switch.turn_off
       #  entity_id: switch.bedroom
       #- service: switch.turn_off
       #  entity_id: switch.tv_bedroom
       #- service: mqtt.publish
       #  data:
       #      topic: "home/xorg/set/pi2"
       #      payload: "off"





make_event_snapshots_living_room:
    alias: Make Event Snapshots Living Room
    sequence:
        - service: shell_command.event_snapshots
          data:
              cams: "livingroom"
make_event_snapshots_street:
    alias: Make Event Snapshots Street
    sequence:
        - service: shell_command.event_snapshots
          data:
              cams: "street"
make_event_snapshots_all:
    alias: Make Event Snapshots all
    sequence:
        - service: shell_command.event_snapshots
          data:
             cams: "street livingroom"


mail_test:
    alias: Mail test
    sequence:
      - service: notify.mail_both
        data_template:
            title: "[homeautomation] Test"
            message: "Test, just ignore"
matrix_test:
    alias: Matrix test
    sequence:
      - service: notify.matrix
        data:
            message: "(Test, just ignore)"

night_scene:
    alias: Turn on night scene
    sequence:
      - service: mqtt.publish
        data_template:
          topic: "home/sound/pi1"
          payload_template: 'computerbeep_5.wav'
      - service: switch.turn_on
        entity_id: switch.tv_spots
      - delay: "00:00:01"
      - wait_template: "{{ states('switch.tv_spots') == 'on' }}"
        timeout: "00:00:05"
      - service: switch.turn_on
        entity_id: switch.back_corner
      - delay: "00:00:01"
      - wait_template: "{{ states('switch.back_corner') == 'on' }}"
        timeout: "00:00:05"
      - service: switch.turn_off
        entity_id: switch.back_room
      - delay: "00:00:01"
      - wait_template: "{{ states('switch.back_room') == 'off' }}"
        timeout: "00:00:05"
      - service: switch.turn_off
        entity_id: switch.front_room
      - delay: "00:00:01"
      - wait_template: "{{ states('switch.front_room') == 'off' }}"
        timeout: "00:00:05"
      - service: switch.turn_off
        entity_id: switch.midspots
      - delay: "00:00:01"
      - wait_template: "{{ states('switch.midspots') == 'off' }}"
        timeout: "00:00:05"
      - service: switch.turn_off
        entity_id: switch.kitchen
      - delay: "00:00:01"
      - wait_template: "{{ states('switch.kitchen') == 'off' }}"
        timeout: "00:00:05"
      - service: switch.turn_off
        entity_id: switch.hall
      - delay: "00:00:01"
      - wait_template: "{{ states('switch.hall') == 'off' }}"
        timeout: "00:00:05"
      - service: script.turn_on
        entity_id: script.ignite_fireplace
      - service: input_number.set_value
        data:
            entity_id: input_number.dresser_ambilight_brightness
            value: 255
      - service: input_select.select_option
        data:
            entity_id: input_select.dresser_ambilight
            option: Purple
      - service: script.turn_on
        entity_id: script.ignite_dresser_ambilight

evening_scene:
    alias: Turn on evening scene
    sequence:
      - service: switch.turn_on
        entity_id: switch.tv_spots
      - delay: "00:00:01"
      - wait_template: "{{ states('switch.tv_spots') == 'on' }}"
        timeout: "00:00:05"
      - service: switch.turn_on
        entity_id: switch.back_corner
      - delay: "00:00:01"
      - wait_template: "{{ states('switch.back_corner') == 'on' }}"
        timeout: "00:00:05"
      - service: switch.turn_on
        entity_id: switch.back_room
      - delay: "00:00:01"
      - wait_template: "{{ states('switch.back_room') == 'on' }}"
        timeout: "00:00:05"
      - service: switch.turn_off
        entity_id: switch.front_room
      - delay: "00:00:01"
      - wait_template: "{{ states('switch.front_room') == 'off' }}"
        timeout: "00:00:05"
      - service: switch.turn_off
        entity_id: switch.midspots
      - delay: "00:00:01"
      - wait_template: "{{ states('switch.midspots') == 'off' }}"
        timeout: "00:00:05"
      - service: switch.turn_off
        entity_id: switch.kitchen
      - delay: "00:00:01"
      - wait_template: "{{ states('switch.kitchen') == 'off' }}"
        timeout: "00:00:05"
      - service: switch.turn_off
        entity_id: switch.hall
      - delay: "00:00:01"
      - wait_template: "{{ states('switch.hall') == 'off' }}"
        timeout: "00:00:05"
      - service: script.turn_on
        entity_id: script.ignite_fireplace
      - service: input_number.set_value
        data:
            entity_id: input_number.dresser_ambilight_brightness
            value: 125
      - service: input_select.select_option
        data:
            entity_id: input_select.dresser_ambilight
            option: Lamp
      - service: script.turn_on
        entity_id: script.ignite_dresser_ambilight

tv_bedroom_volup:
    alias: Volume up (Bedroom)
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_VOLUMEUP"}'
tv_bedroom_voldown:
    alias: Volume down (Bedroom)
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_VOLUMEDOWN"}'
tv_bedroom_mute:
    alias: Mute (Bedroom)
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_MUTE"}'

tv_bedroom_ok:
    alias: OK
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_OK"}'
tv_bedroom_back:
    alias: Back
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_BACK"}'
tv_bedroom_down:
    alias: Down
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_DOWN"}'
tv_bedroom_up:
    alias: Up
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_UP"}'
tv_bedroom_left:
    alias: left
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_LEFT"}'
tv_bedroom_right:
    alias: right
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_RIGHT"}'
tv_bedroom_channelup:
    alias: Channel up
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_CHANNELUP"}'
tv_bedroom_channeldown:
    alias: Channel down
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_CHANNELDOWN"}'
tv_bedroom_1:
    alias: 1
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_1"}'
tv_bedroom_2:
    alias: 2
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_2"}'
tv_bedroom_3:
    alias: 3
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_3"}'
tv_bedroom_4:
    alias: 4
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_1"}'
tv_bedroom_5:
    alias: 5
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_5"}'
tv_bedroom_6:
    alias: 6
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_6"}'
tv_bedroom_7:
    alias: 7
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_7"}'
tv_bedroom_8:
    alias: 8
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_8"}'
tv_bedroom_9:
    alias: 9
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_9"}'
tv_bedroom_0:
    alias: 0
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi2"
            payload: '{"device":"tvboven","key":"KEY_0"}'
speech_test:
    alias: Speech Test
    sequence:
        - service: mqtt.publish
          data:
              topic: "home/say/pi1"
              payload: "Test test, this is a test"
say:
    alias: Say
    sequence:
        - service: mqtt.publish
          data_template:
              topic: "home/say/pi1"
              payload: "{{ states.input_text.say.state }}"

soundoutput_speakers:
    alias: Soundoutput Speakers
    sequence:
        - service: mqtt.publish
          data:
              topic: "home/soundoutput/pi1"
              payload: "speakers"
soundoutput_hdmi:
    alias: Soundoutput HDMI
    sequence:
        - service: mqtt.publish
          data:
              topic: "home/soundoutput/pi1"
              payload: "hdmi"
start_timer:
    alias: Start Timer
    sequence:
        - service: mqtt.publish
          data:
            topic: "home/say/pi1"
            payload: 'Timer started'
        - delay: '00:{{ states.input_number.timer.state | int }}:00'
        - service: media_player.play_media
          data:
             entity_id: media_player.hall_speaker
             media_content_id: file:///home/homeautomation/homeassistant/media/meditationend.ogg
             media_content_type: 'music'
        - service: mqtt.publish
          data:
              topic: "home/notify/everywhere"
              payload: "{{now().timestamp()|int}}: TIMER FINISHED"
              qos: 1

vacuum_turn_on:
    alias: Vacuum turn on
    sequence:
        - service: mqtt.publish
          data:
            topic: "home/say/pi1"
            payload: 'Starting the clean-up'
        - service: vacuum.start
          entity_id: vacuum.robot
vacuum_turn_off:
    alias: Vacuum turn off
    sequence:
        - service: mqtt.publish
          data:
            topic: "home/say/pi1"
            payload: 'Stopping the clean-up'
        - service: vacuum.stop
          entity_id: vacuum.robot
        - service: vacuum.return_to_base
          entity_id: vacuum.robot
vacuum_pause:
    alias: Vacuum pause
    sequence:
        service: vacuum.pause
        entity_id: vacuum.robot
vacuum_return_to_home:
    alias: Vacuum return to home
    sequence:
        service: vacuum.return_to_base
        entity_id: vacuum.robot
vacuum_locate:
    alias: Vacuum locate
    sequence:
        service: vacuum.locate
        entity_id: vacuum.robot

play_youtube_link:
    alias: Play Youtube link
    sequence:
       - service: script.turn_on
         entity_id: script.videoplayer
       - service: mqtt.publish
         data_template:
             topic: "home/video/pi1/play"
             payload: "{{ states.input_text.youtube_link.state }}"

pause_youtube:
    alias: Pause/play
    sequence:
       - service: mqtt.publish
         data_template:
             topic: "home/video/pi1/pause"
             payload: ""
stop_youtube:
    alias: Stop
    sequence:
       - service: mqtt.publish
         data_template:
             topic: "home/video/pi1/stop"
             payload: ""

next_youtube:
    alias: Next
    sequence:
       - service: mqtt.publish
         data_template:
             topic: "home/video/pi1/next"
             payload: ""

play_videoqueue:
    alias: Play current queue
    sequence:
       - service: script.turn_on
         entity_id: script.videoplayer
       - service: mqtt.publish
         data_template:
             topic: "home/video/pi1/play"
             payload: ""

play_youtube_link_bedroom:
    alias: Play Youtube link bedroom
    sequence:
       - service: script.turn_on
         entity_id: script.videoplayer_bedroom
       - service: mqtt.publish
         data_template:
             topic: "home/video/pi2/play"
             payload: "{{ states.input_text.youtube_link.state }}"

play_videoqueue_bedroom:
    alias: Play current queue bedroom
    sequence:
       - service: script.turn_on
         entity_id: script.videoplayer_bedroom
       - service: mqtt.publish
         data_template:
             topic: "home/video/pi2/play"
             payload: ""

add_youtube_link:
    alias: Add Youtube link
    sequence:
       - service: script.turn_on
         entity_id: script.media_centre
       - service: mqtt.publish
         data_template:
             topic: "home/video/pi1/add"
             payload: "{{ states.input_text.youtube_link.state }}"

add_youtube_link_bedroom:
    alias: Add Youtube link bedroom
    sequence:
       - service: script.turn_on
         entity_id: script.media_centre_bedroom
       - service: mqtt.publish
         data_template:
             topic: "home/video/pi2/add"
             payload: "{{ states.input_text.youtube_link.state }}"

mpc_clear:
    alias: Clear playlist
    sequence:
        - service: shell_command.mpcclear
        - service: mqtt.publish
          data:
              topic: "home/say/pi1"
              payload: "Playlist cleared"

mpc_play:
    alias: Search and play music
    sequence:
        - service: mqtt.publish
          data:
            topic: "home/say/pi1"
            payload: 'Searching and playing music'
        - service: shell_command.mpc
          data_template:
              type: "{{states.input_select.mpc_type.state}}"
              value: "{{states.input_text.mpc_search.state}}"
              filter: "{{states.input_select.mpc_filter.state}}"
        - service: script.turn_on
          entity_id: script.listen_to_music

mpc_play_bedroom:
    alias: Search and play music (bedroom)
    sequence:
        - service: mqtt.publish
          data:
            topic: "home/say/pi2"
            payload: 'Searching and playing music'
        - service: shell_command.mpc
          data_template:
              type: "{{states.input_select.mpc_type.state}}"
              value: "{{states.input_text.mpc_search.state}}"
              filter: "{{states.input_select.mpc_filter.state}}"
        - service: script.turn_on
          entity_id: script.listen_to_music_bedroom


mpc_playlist:
    alias: Play list
    sequence:
        - service: mqtt.publish
          data:
              topic: "home/say/pi1"
              payload: "Playing playlist"
        - service: shell_command.mpcplaylist
          data_template:
              playlist: "{{states.input_text.mpc_playlist.state}}"
        - service: script.turn_on
          entity_id: script.listen_to_music

mpc_playlist_bedroom:
    alias: Play list bedroom
    sequence:
        - service: mqtt.publish
          data:
              topic: "home/say/pi2"
              payload: "Playing playlist"
        - service: shell_command.mpcplaylist
          data_template:
              playlist: "{{states.input_text.mpc_playlist.state}}"
        - service: script.turn_on
          entity_id: script.listen_to_music_bedroom

send_status:
    alias: Send status
    sequence:
        - service: mqtt.publish
          data_template:
              topic: "home/presence/proycon"
              payload: "{{ states.input_boolean.proycon_home.state|upper }}"
        - service: mqtt.publish
          data_template:
              topic: "home/presence/hans"
              payload: "{{ states.input_boolean.hans_home.state|upper }}"
        - service: mqtt.publish
          data_template:
              topic: "home/alarm"
              payload: "{{ states('alarm_control_panel.alarm_system') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/binary_sensor/frontdoor"
              payload: "{{ states('binary_sensor.frontdoor') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/binary_sensor/backdoor"
              payload: "{{ states('binary_sensor.backdoor') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/binary_sensor/bathroom_window_sensor"
              payload: "{{ states('binary_sensor.bathroom_window_bathroom_window_door_state_simple') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/binary_sensor/bedroomwindow_right"
              payload: "{{ states('binary_sensor.bedroomwindow_right') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/binary_sensor/bedroomwindow_left"
              payload: "{{ states('binary_sensor.bedroomwindow_left') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/binary_sensor/roof_window_east"
              payload: "{{ states('binary_sensor.roof_window_east') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/binary_sensor/roof_window_west"
              payload: "{{ states('binary_sensor.roof_window_west') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/climate/cv"
              payload: "{{ states.climate.anna.attributes.hvac_action }} {{ states.climate.anna.attributes.temperature }}"
        - service: mqtt.publish
          data_template:
              topic: "home/sensor/temperature_living_room_2"
              payload: "{{ states.climate.anna.attributes.current_temperature }}"
        - service: mqtt.publish
          data_template:
              topic: "home/climate/aircoboven"
              payload: "{{ states.climate.daikinap75591.state }}"
        - service: mqtt.publish
          data_template:
              topic: "home/climate/aircobeneden"
              payload: "{{ states.climate.daikinap82317.state }}"
        - service: mqtt.publish
          data_template:
              topic: "home/lights/tv_spots"
              payload: "{{ states('switch.tv_spots') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/lights/front_room"
              payload: "{{ states('switch.front_room') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/lights/midspots"
              payload: "{{ states('switch.midspots') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/lights/back_room"
              payload: "{{ states('switch.back_room') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/lights/back_corner"
              payload: "{{ states('switch.back_corner') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/lights/kitchen"
              payload: "{{ states('switch.kitchen') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/lights/porch"
              payload: "{{ states('switch.porch') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/lights/garden"
              payload: "{{ states('switch.garden') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/lights/roof"
              payload: "{{ states('switch.roof') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/lights/bedroom"
              payload: "{{ states('switch.bedroom') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/lights/office"
              payload: "{{ states('switch.office') }}"
        - service: mqtt.publish
          data_template:
              topic: "home/lights/hall"
              payload: "{{ states('switch.hall') }}"
