#------------ Startup notification ------------------------
- alias: Startup
  hide_entity: True
  trigger:
      platform: homeassistant
      event: start
  action:
      - service: tts.picotts_say
        entity_id: media_player.hall_speaker
        data:
            message: Home automation started
      - service: shell_command.snapshot_clear_locks #clear all snapshot locks on startup
      - service: script.turn_on  #trigger RPi slaves to send their known statusses again
        data:
            entity_id: script.trigger_slave_poll
      - service: script.turn_on
        data:
            entity_id: script.reset_lights
      - service: notify.xmpp_proycon
        data:
            message: "Home automation started"


#------------ Snapshots ------------------------
- alias: Frontdoor snapshots
  hide_entity: False
  trigger:
    platform: time
    seconds: '/9' #every ten seconds
  action:
    - service: shell_command.snapshot_frontdoor
- alias: Hall upstairs snapshots
  hide_entity: False
  trigger:
    platform: time
    seconds: '/11' #every eleven seconds
  action:
    - service: shell_command.snapshot_hallupstairs
- alias: Living room snapshots
  hide_entity: False
  trigger:
    platform: time
    seconds: '/3' #every five seconds
  action:
    - service: shell_command.snapshot_livingroom
- alias: Street camera snapshots
  hide_entity: False
  trigger:
    platform: time
    seconds: '/3' #every three seconds
  action:
    - service: shell_command.snapshot_street
- alias: Garden snapshots
  hide_entity: False
  trigger:
    platform: time
    seconds: '/5' #every five seconds
  action:
    - service: shell_command.snapshot_garden
- alias: Daily snapshot archiving
  hide_entity: False
  trigger:
    platform: time
    at: "00:00:00"
  action:
    - service: shell_command.archive_snapshots
- alias: Door notification at night
  trigger:
      - platform: state
        entity_id: binary_sensor.front_door
        to: "on"
      - platform: state
        entity_id: binary_sensor.back_door
        to: "on"
  condition:
      - condition: time
        after: '23:00:00'
        before: '05:00:00'
      - condition: state
        entity_id: binary_sensor.anybodyhome
        state: "on"
  action:
      - service: tts.picotts_say
        entity_id: media_player.hall_speaker
        data:
            message: Door open
- id: lights_on_in_the_evening
  alias: Lights on in the evening
  trigger:
      platform: sun
      event: sunset
      offset: '-00:45:00'
  action:
      service: switch.turn_on
      entity_id: group.living_lights
- id: garden_lights_on_in_the_evening
  alias: Garden lights on in the evening
  trigger:
      platform: sun
      event: sunset
      offset: '01:00:00'
  action:
      service: switch.turn_on
      entity_id: group.garden_lights
- id: porch_light_on_at_night
  alias: Porch light on at night
  trigger:
      platform: sun
      event: sunset
      offset: '00:00:00'
  action:
      service: switch.turn_on
      entity_id: switch.porch
- id: porch_light_off_after_dawn
  alias: Porch light off after dawn
  trigger:
      platform: sun
      event: sunrise
      offset: '01:00:00'
  action:
      service: switch.turn_off
      entity_id: switch.porch
- id: lights_off_at_night
  alias: Lights off at night
  trigger:
      platform: time
      at: '01:00:00'
  action:
      - service: script.turn_on
        entity_id: script.lights_off
- id: doorbell
  alias: Doorbell
  trigger:
      platform: state
      entity_id: binary_sensor.doorbell
      from: "off"
      to: "on"
  action:
      - service: script.turn_on
        entity_id: script.doorbell_sound
      - service: script.turn_off
        entity_id: script.reset_ipcam
      - service: input_select.select_option
        data:
          entity_id: input_select.ipcam_direction
          option: Front
      - service: notify.xmpp_proycon
        data:
          message: "There is somebody at the door"
      - service: notify.xmpp_hans
        data:
          message: "De deurbel gaat"
      - service: script.turn_on
        entity_id: script.flash_notification
      - delay:
          seconds: 10
      - service: script.turn_on
        data:
          entity_id: script.reset_ipcam
- id: ipcam_topreset
  alias: Camera to preset
  trigger:
      platform: state
      entity_id: input_select.ipcam_direction
  action:
      service: script.turn_on
      entity_id: script.ipcam_topreset
- id: alarm_trigger
  alias: Alarm trigger
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.back_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bedroom_window_left
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bedroom_window_right
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.alarm_system
      state: armed_away
  action:
    - service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.alarm_system
    - service: script.turn_on
      entity_id: script.alarm
    - service: notify.xmpp_proycon
      data:
          message: "INTRUDER ALERT!! ALARM TRIGGERED!!! CHECK IMMEDIATELY!!!"
    - service: notify.xmpp_hans
      data:
          message: "INTRUDER ALERT!! ALARM TRIGGERED!!! CHECK IMMEDIATELY!!!"
    - service: script.turn_on
      entity_id: script.sirene_lights
    - service: switch.turn_on
      entity_id: switch.office
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.tv_spots
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.front_room
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.back_room
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.midspots
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.back_corner
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.back_room
    - service: script.turn_on
      entity_id: script.alarm_blink
    - delay:
        seconds: 1
    - service: script.turn_on
      entity_id: switch.roof
    - delay:
        seconds: 1
    - service: script.turn_on
      entity_id: switch.porch
- id: arm_when_away
  alias: 'Arm when away'
  trigger:
    - platform: state
      entity_id: binary_sensor.anybodyhome
      from: 'on'
      to: 'off'
  action:
    - service: alarm_control_panel.alarm_arm_away
      entity_id: alarm_control_panel.alarm_system
    - service: tts.picotts_say
      entity_id: media_player.hall_speaker
      data:
          message: System armed
    - service: notify.xmpp_proycon
      data:
          message: "System armed"
    - service: notify.xmpp_hans
      data:
          message: "System armed"
- id: disarm_when_home
  alias: 'Disarm when home'
  trigger:
    - platform: state
      entity_id: binary_sensor.anybodyhome
      from: 'off'
      to: 'on'
  action:
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.alarm_system
    - service: notify.xmpp_proycon
      data:
          message: "System disarmed"
    - service: notify.xmpp_hans
      data:
          message: "System disarmed"
    - service: script.turn_on
      entity_id: script.flash_notification
- id: front_door_closed
  alias: "Front Door closed"
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'on'
      to: 'off'
  action:
    - service: script.turn_off
      entity_id: script.front_door_still_open
- id: front_door_opened
  alias: "Front door opened"
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'off'
      to: 'on'
  action:
    - service: script.turn_on
      entity_id: script.front_door_still_open
    - service: script.turn_off
      entity_id: script.reset_ipcam
    - service: input_select.select_option
      data:
          entity_id: input_select.ipcam_direction
          option: Hall
    - service: script.turn_off
      entity_id: script.flash_notification
    - delay:
        seconds: 2
    - service: script.turn_on
      entity_id: script.flash_reset
    - delay:
        seconds: 6
    - service: script.turn_on
      entity_id: script.reset_ipcam
- id: back_door_closed
  alias: "Back Door closed"
  trigger:
    - platform: state
      entity_id: binary_sensor.back_door
      from: 'on'
      to: 'off'
  action:
    - service: script.turn_off
      entity_id: script.back_door_still_open
- id: back_door_opened
  alias: "back door opened"
  trigger:
    - platform: state
      entity_id: binary_sensor.back_door
      from: 'off'
      to: 'on'
  action:
    - service: script.turn_on
      entity_id: script.back_door_still_open
    - service: script.turn_off
      entity_id: script.reset_ipcam
    - service: input_select.select_option
      data:
          entity_id: input_select.ipcam_direction
          option: Back
    - service: script.turn_off
      entity_id: script.flash_notification
    - delay:
        seconds: 2
    - service: script.turn_on
      entity_id: script.flash_reset
    - delay:
        seconds: 8
    - service: script.turn_on
      entity_id: script.reset_ipcam
- id: window_upstairs_opened
  alias: "Window upstairs opened"
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_window_left
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bedroom_window_right
      from: 'off'
      to: 'on'
  action:
    - service: script.turn_off
      entity_id: script.reset_ipcam
    - service: input_select.select_option
      data:
          entity_id: input_select.ipcam_direction
          option: Hall
    - delay:
        seconds: 10
    - service: script.turn_on
      entity_id: script.reset_ipcam
- id: home_greeting
  alias: "Home Greeting"
  trigger: #when doors close on reentry
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'off'
      to: 'off'
    - platform: state
      entity_id: binary_sensor.back_door
      from: 'on'
      to: 'off'
  condition: #and we were not home
    - condition: state
      entity_id: input_boolean.inside_house
      state: "off"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.inside_house
    - delay:
        seconds: 3
    - service: tts.picotts_say
      entity_id: media_player.hall_speaker
      data_template:
        message: Welcome home
- id: home_greeting_proycon
  alias: "Home Greeting proycon"
  trigger: #when doors close on reentry
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: binary_sensor.back_door
      from: 'on'
      to: 'off'
  condition: #and we were not home
    - condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.proycon_inside_house
          state: "off"
        - condition: state
          entity_id: input_boolean.inside_house
          state: "on"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.proycon_inside_house
    - delay:
        seconds: 3
    - service: tts.picotts_say
      entity_id: media_player.hall_speaker
      data:
        message: Hello Martin
- id: home_greeting_hans
  alias: "Home Greeting Hans"
  trigger: #when doors close on reentry
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: binary_sensor.back_door
      from: 'on'
      to: 'off'
  condition: #and we were not home
    - condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.hans_inside_house
          state: "off"
        - condition: state
          entity_id: input_boolean.inside_house
          state: "on"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.hans_inside_house
    - delay:
        seconds: 3
    - service: tts.picotts_say
      entity_id: media_player.hall_speaker
      data:
        message: Hello Hans
- id: proycon_left_house
  alias: Proycon Left House
  trigger:
    - platform: state
      entity_id: device_tracker.proyphone
      from: 'home'
      to: 'away'
  action:
     - delay:
         minutes: 10
     - service: input_boolean.turn_off
       entity_id: input_boolean.proycon_inside_house
- id: hans_left_house
  alias: Hans Left House
  trigger:
    - platform: state
      entity_id: device_tracker.hansphone
      from: 'home'
      to: 'away'
  action:
     - delay:
         minutes: 10
     - service: input_boolean.turn_off
       entity_id: input_boolean.hans_inside_house
- id: both_left_house
  alias: Both Left House
  trigger:
    - platform: state
      entity_id: input_boolean.proycon_inside_house
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: input_boolean.hans_inside_house
      from: 'on'
      to: 'off'
  condition:
    - condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.proycon_inside_house
          state: "off"
        - condition: state
          entity_id: input_boolean.hans_inside_house
          state: "off"
  action:
     - service: input_boolean.turn_off
       entity_id: input_boolean.inside_house
- id: morninglights_on_hans
  trigger:
      - platform: time
        at: '05:15:00'
  condition:
      condition: time
      weekday:
          - mon
          - tue
          - thu
          - fri
  action:
       - service: switch.turn_on
         entity_id: switch.tv_spots
- id: morninglights_off_hans
  trigger:
      - platform: time
        at: '06:15:00'
  condition:
      condition: time
      weekday:
          - mon
          - tue
          - thu
          - fri
  action:
       - service: switch.turn_off
         entity_id: switch.tv_spots
- id: ignite_fireplace_in_evening
  alias: Ignite fireplace in evening
  trigger:
     platform: sun
     event: sunset
     offset: '1:00:00'
  condition:
     - condition: state
       entity_id: binary_sensor.anybodyhome
       state: "on"
  action:
     - service: script.turn_on
       entity_id: script.ignite_fireplace
     - service: script.turn_on
       entity_id: script.ignite_dresser_ambilight




#TODO: wake up clock
