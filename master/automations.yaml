#------------ Startup notification ------------------------
- alias: Startup
  trigger:
      platform: homeassistant
      event: start
  action:
      - service: frontend.set_theme
        data:
            name: proyslate
      - service: shell_command.snapshot_clear_locks #clear all snapshot locks on startup
      - service: script.turn_on  #trigger RPi slaves to send their know().strftime('%Y-%m-%d [%H:%M:%S]')n statusses again
        data:
            entity_id: script.repoll_slaves
      - service: script.turn_on
        data:
            entity_id: script.reset_lights
      - service: script.turn_on
        data:
            entity_id: script.reset_fireplace
      - service: timer.start
        data:
            entity_id: timer.reset_ipcam
      - service: notify.matrix
        data:
            message: "Home automation started @{{now().strftime('%Y-%m-%d [%H:%M:%S]')}}"
      - service: mqtt.publish
        data:
            topic: "home/say/pi1"
            payload: "Home automation started"


#------------ Snapshots ------------------------
- alias: Frontdoor snapshots
  trigger:
    platform: time_pattern
    seconds: '/9' #every ten seconds
  action:
    - service: shell_command.snapshot_frontdoor
- alias: Hall upstairs snapshots
  trigger:
    platform: time_pattern
    seconds: '/11' #every eleven seconds
  action:
    - service: shell_command.snapshot_hallupstairs
- alias: Living room snapshots
  trigger:
    platform: time_pattern
    seconds: '/3' #every five seconds
  action:
    - service: shell_command.snapshot_livingroom
- alias: Street snapshots
  trigger:
    platform: time_pattern
    seconds: '/1' #every second
  action:
    - service: shell_command.snapshot_street
- alias: Garden snapshots
  trigger:
    platform: time_pattern
    seconds: '/5' #every five seconds
  action:
    - service: shell_command.snapshot_garden
- alias: Daily snapshot archiving
  trigger:
    platform: time
    at: "00:00:00"
  action:
    - service: shell_command.archive_snapshots
- id: lights_on_in_the_evening
  alias: Lights on in the evening
  trigger:
    - platform: sun
      event: sunset
      offset: '-00:45:00'
  condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{% if states.script.lights_on.attributes.last_triggered  %}{{(as_timestamp(now())-as_timestamp(states.script.lights_on.attributes.last_triggered)) > 3600 }}{% else %}true{% endif %}'
        - condition: time
          after: '15:00'
          before: '23:30'
  action:
      - service: script.turn_on
        entity_id: script.lights_on
- id: lights_on_when_dark_during_the_day
  alias: Lights on when dark during the day
  trigger:
    - platform: numeric_state
      entity_id: sensor.fibaro_office_luminance
      below: 20
    - platform: numeric_state
      entity_id: sensor.fibaro_hall_luminance
      below: 8
  condition:
    - condition: and
      conditions:
          - condition: numeric_state
            entity_id: sensor.fibaro_office_luminance
            below: 20
          - condition: numeric_state
            entity_id: sensor.fibaro_hall_luminance
            below: 8
          - condition: template
            value_template: '{{ states.sensor.wake_up_relative_time.state > 0 }}'
          - condition: state
            entity_id: sun.sun
            state: "above_horizon"
          - condition: template
            value_template: '{% if states.script.lights_on.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.script.lights_on.attributes.last_triggered)) > 36000 }} {% else %} true {% endif %}'
          - condition: state
            entity_id: switch.tv_spots
            state: "off"
  action:
      service: script.turn_on
      entity_id: script.lights_on
- id: lights_off_when_light_during_the_day
  alias: Lights off when light during the day
  trigger:
    - platform: numeric_state
      entity_id: sensor.fibaro_office_luminance
      above: 80
    - platform: numeric_state
      entity_id: sensor.fibaro_hall_luminance
      above: 12
  condition:
    - condition: and
      conditions:
          - condition: numeric_state
            entity_id: sensor.fibaro_office_luminance
            above: 20
          - condition: numeric_state
            entity_id: sensor.fibaro_hall_luminance
            above: 8
          - condition: template
            value_template: '{{ sensor.wake_up_relative_time > 0 }}'
          - condition: state
            entity_id: sun.sun
            state: "above_horizon"
          - condition: state
            entity_id: switch.kitchen
            state: "off"
          - condition: state
            entity_id: switch.hall
            state: "off"
          - condition: state
            entity_id: switch.office
            state: "off"
          - condition: template
            value_template: '{% if states.automation.lights_on_when_dark_during_the_day.attributes.last_triggered  %} {{(as_timestamp(now()) - as_timestamp(states.automation.lights_on_when_dark_during_the_day.attributes.last_triggered)) < 21600 }} {% else %} true {% endif %}'
          - condition: state
            entity_id: switch.front_room
            state: "on"
          - condition: state
            entity_id: switch.midspots
            state: "on"
  action:
      service: script.turn_on
      entity_id: script.lights_off
- id: garden_lights_on_in_the_evening
  alias: Garden lights on in the evening
  trigger:
      platform: sun
      event: sunset
      offset: '01:00:00'
  action:
      service: switch.turn_on
      entity_id: group.garden_lights
- id: porch_light_on_at_night
  alias: Porch light on at night
  trigger:
      platform: sun
      event: sunset
      offset: '00:00:00'
  action:
      service: switch.turn_on
      entity_id: switch.porch
- id: porch_light_off_after_dawn
  alias: Porch light off after dawn
  trigger:
      platform: sun
      event: sunrise
      offset: '01:00:00'
  action:
      service: switch.turn_off
      entity_id: switch.porch
- id: lights_off_at_night
  alias: Lights off at night
  trigger:
      platform: time
      at: '01:00:00'
  action:
      - service: script.turn_on
        entity_id: script.lights_off
- id: doorbell
  alias: Doorbell
  trigger:
      platform: state
      entity_id: binary_sensor.doorbell
      from: "off"
      to: "on"
  condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ states('sensor.ir_send_activity') == 'unknown' }}"
        - condition: template
          value_template: '{% if states.automation.doorbell.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.doorbell.attributes.last_triggered)) >= 20 }} {% else %} true {% endif %}'
        - condition: template
          value_template: '{% if states.binary_sensor.front_door.last_changed  %} {{(as_timestamp(now())-as_timestamp(states.binary_sensor.front_door.last_changed)) >= 60 }} {% else %} true {% endif %}'
  action: # sound is handled separately
      - service: input_select.select_option
        data:
          entity_id: input_select.ipcam_direction
          option: Front
      - service: script.turn_on
        entity_id: script.yellow_lights
      - service: script.turn_on
        entity_id: script.tvdecoder_playpause #pause TV
      - service: media_player.media_pause
        entity_id: media_player.mpd #pause music
      - service: timer.start
        data:
          entity_id: timer.reset_ipcam
      - service: mqtt.publish
        data:
            topic: "home/notify/doorbell"
            payload: "ON"
      - service: switch.turn_on
        entity_id: switch.hall
      - service: timer.start
        data:
          entity_id: timer.home_notification_lights
      - service: persistent_notification.create
        data_template:
            message: "There is somebody at the door ({{ now().strftime('%Y-%m-%d [%H:%M:%S]') }})"
            title: "The doorbell rang"
      - service: notify.xmpp_proycon
        data_template:
          message: "The doorbell rang, there is somebody at the door ({{ now().strftime('%Y-%m-%d [%H:%M:%S]') }})"
      - service: notify.mail_both
        data_template:
            title: "[homeautomation] Doorbell rang ({{ now().strftime('%Y-%m-%d [%H:%M:%S]') }})"
            message: "The doorbell rang; there is somebody at the door, please check"
      - service: notify.matrix
        data_template:
            message: "The doorbell rang, there is somebody at the door - {{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
      - delay:
          seconds: 6
      - service: shell_command.event_snapshots
        data:
          cams: "street frontdoor"
- id: doorbell_sound
  alias: Doorbell Sound
  trigger:
      platform: state
      entity_id: binary_sensor.doorbell
      from: "off"
      to: "on"
  condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ states('sensor.ir_send_activity') == 'unknown' }}"
        - condition: template
          value_template: '{% if states.automation.doorbell_sound.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.doorbell_sound.attributes.last_triggered)) >= 20 }} {% else %} true {% endif %}'
        - condition: template
          value_template: '{% if states.binary_sensor.front_door.last_changed  %} {{(as_timestamp(now())-as_timestamp(states.binary_sensor.front_door.last_changed)) >= 60 }} {% else %} true {% endif %}'
  action:
    - service: script.turn_on
      entity_id: script.doorbell_sound
- id: ipcam_topreset
  alias: Camera to preset
  trigger:
      platform: state
      entity_id: input_select.ipcam_direction
  action:
    - service: timer.cancel
      data:
        entity_id: timer.reset_ipcam
    - service: script.turn_on
      entity_id: script.ipcam_topreset

- id: alarm_trigger
  alias: Alarm trigger
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.back_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bedroom_window_left
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bedroom_window_right
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bathroom_window_sensor
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.alarm_system
      state: armed_away
  action:
    - service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.alarm_system


- id: alarm_triggered
  alias: Alarm Triggered
  trigger:
    - platform: state
      entity_id: alarm_control_panel.alarm_system
      to: 'triggered'
  action:
    - service: script.turn_on
      entity_id: script.alarm
    - service: mqtt.publish
      data:
          topic: "home/notify/alarm"
          payload: "TRIGGERED"
    - service: notify.mail_both
      data_template:
          title: "[homeautomation] INTRUDER ALERT!! ALARM TRIGGERED AT ({{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}!!! CHECK IMMEDIATELY!!!"
          message: "INTRUDER ALERT!! ALARM TRIGGERED AT {{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}!!! CHECK IMMEDIATELY!!!"
    - service: notify.matrix
      data:
          message: "INTRUDER ALERT!! ALARM TRIGGERED AT {{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}!!! CHECK IMMEDIATELY!!!"
    - service: notify.xmpp_proycon
      data_template:
          message: "INTRUDER ALERT!! ALARM TRIGGERED AT {{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}!!! CHECK IMMEDIATELY!!!"
    - service: notify.xmpp_hans
      data_template:
          message: "INTRUDER ALERT!! ALARM TRIGGERED AT {{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}!!! CHECK IMMEDIATELY!!!"
    - service: persistent_notification.create
      data_template:
        message: "ALARM TRIGGERED!!!"
        title: "INTRUDER ALTER!!! ALARM TRIGGERED AT {{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}!!! CHECK IMMEDIATELY!!!"
    - service: notify.sms
      data_template:
          message: "INTRUDER ALTER!!! ALARM TRIGGERED AT {{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}!!! CHECK IMMEDIATELY!!!"
          target:
              - !secret proyphone
              - !secret hansphone
    - service: script.turn_on
      entity_id: script.sirene_lights
    - service: script.turn_on
      entity_id: switch.roof
    - delay:
        seconds: 1
    - service: switch.turn_on
      entity_id: switch.office
    - delay:
        seconds: 1
    - service: mqtt.publish
      data_template:
         topic: "home/sound/pi1"
         payload_template: 'intruderalert.ogg'
    - service: switch.turn_off
      entity_id: switch.tv_spots
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.front_room
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.back_room
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.midspots
    - delay:
        seconds: 1
    - service: shell_command.event_snapshots
      data:
          cams: "livingroom street garden hallupstairs frontdoor"
    - service: switch.turn_off
      entity_id: switch.back_corner
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.back_room
    - delay:
        seconds: 1
    - service: script.turn_on
      entity_id: switch.porch
- id: arm_when_away
  alias: 'Arm when away'
  trigger:
    - platform: state
      entity_id: binary_sensor.anybodyhome
      from: 'on'
      to: 'off'
  action:
    - service: alarm_control_panel.alarm_arm_away
      entity_id: alarm_control_panel.alarm_system
    - service: mqtt.publish
      data:
          topic: "home/say/pi1"
          payload: "System armed"
    - service: mqtt.publish
      data:
          topic: "home/notify/armed"
          payload: "System armed"
    - service: notify.matrix
      data:
          message: "System armed @{{now().strftime('%Y-%m-%d [%H:%M:%S]')}}"
- id: disarm_when_home
  alias: 'Disarm when home'
  trigger:
    - platform: state
      entity_id: binary_sensor.anybodyhome
      from: 'off'
      to: 'on'
  action:
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.alarm_system
    - service: mqtt.publish
      data:
          topic: "home/notify/disarmed"
          payload: "System disarmed"
    - service: notify.matrix
      data:
          message: "System disarmed @{{now().strftime('%Y-%m-%d [%H:%M:%S]')}}"
    - service: script.turn_on
      entity_id: script.home_notification_lights
- id: already_disarmed_notification #when someone comes home and system is already disarmed (due to other person being home), signal for safe entry
  alias: 'Already disarmed notification'
  trigger:
    - platform: state
      entity_id: device_tracker.proyphone
      from: 'not_home'
      to: 'home'
    - platform: state
      entity_id: device_tracker.pinephone
      from: 'not_home'
      to: 'home'
    - platform: state
      entity_id: device_tracker.hansphone
      from: 'not_home'
      to: 'home'
  condition:
    - condition: state
      entity_id: alarm_control_panel.alarm_system
      state: 'disarmed'
  action:
    - service: script.turn_on
      entity_id: script.home_notification_lights
    - service: mqtt.publish
      data:
          topic: "home/notify/disarmed"
          payload: "System already disarmed"
    - service: notify.matrix
      data:
          message: "System already disarmed @{{now().strftime('%Y-%m-%d [%H:%M:%S]')}}"
- id: home_notification_lights_finished
  alias: "Home Notification Lights Finished"
  trigger:
     - platform: event
       event_type: timer.finished
       event_data:
          entity_id: timer.home_notification_lights
     - platform: event
       event_type: timer.cancelled
       event_data:
          entity_id: timer.home_notification_lights
  action:
     - service_template: "switch.turn_{% if is_state('sun.sun','below_horizon') %}on{% else %}off{% endif %}"
       data:
          entity_id: switch.back_room
     - service: script.reset_fireplace
       entity_id: script.reset_fireplace
     - delay:
         seconds: 3
     - service: script.turn_on
       entity_id: script.reset_guard_lights
     - delay:
         seconds: 10
     - condition: state
       entity_id: binary_sensor.front_door
       state: 'off'
- id: reset_ipcam_finished
  alias: "Reset IPCam Finished"
  trigger:
     - platform: event
       event_type: timer.finished
       event_data:
          entity_id: timer.reset_ipcam
  action:
     - service: script.turn_on
       entity_id: script.reset_ipcam
- id: front_door_still_open
  alias: "Front door still open"
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      to: 'on'
      for:
          seconds: 30
  condition:
    - condition: time
      after: '06:00'
      before: '22:00'
  action:
    - service: tts.picotts_say
      entity_id: media_player.hall_speaker
      data:
          message: Front door still open
    - service: mqtt.publish
      data:
          topic: "home/say/pi1"
          payload: "Front door still open"
    - service: mqtt.publish
      data:
          topic: "home/notify/warning"
          payload: "Front door still open"
    - service: notify.mail_both
      data_template:
          title: "[homeautomation] Front door still open"
          message: "Front door still open"
    - service: notify.matrix
      data:
          message: "Front door still open @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
- id: back_door_still_open
  alias: "Back door still open"
  trigger:
    - platform: state
      entity_id: binary_sensor.back_door
      to: 'on'
      for:
          seconds: 30
  condition:
    - condition: time
      after: '06:00'
      before: '22:00'
  action:
    - service: mqtt.publish
      data:
          topic: "home/notify/warning"
          payload: "Front door still open"
    - service: notify.mail_both
      data_template:
          title: "[homeautomation] Back door still open"
          message: "Back door still open"
    - service: mqtt.publish
      data:
          topic: "home/say/pi1"
          payload: "Back door still open"
    - service: notify.matrix
      data:
          message: "Back door still open @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
- id: front_door_opened
  alias: "Front door opened"
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'off'
      to: 'on'
  condition:
      condition: template
      value_template: "{{ states('sensor.ir_send_activity') == 'unknown' }}"
  action:
    - service: switch.turn_on
      entity_id: switch.hall
    - service: input_select.select_option
      data:
          entity_id: input_select.ipcam_direction
          option: Hall
    - service: timer.cancel
      entity_id: timer.home_notification_lights
    - service: timer.start
      entity_id: timer.reset_ipcam
    - delay:
        seconds: 3
    - service: shell_command.event_snapshots
      data:
          cams: "street frontdoor"
- id: door_opened_sleep
  alias: "Door opened while asleep"
  trigger:
    - platform: state
      entity_id: binary_sensor.back_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.front_door
      to: 'on'
  condition:
     condition: and
     conditions:
        - condition: time
          after: '22:00'
          before: '09:00'
        - condition: state
          entity_id: binary_sensor.anybodyhome
          state: "on"
        - condition: template
          value_template: '{% if states.binary_sensor.pir_hall.last_updated  %} {{(as_timestamp(now())-as_timestamp(states.binary_sensor.pir_hall.attributes.last_updated)) > 300 }} {% else %} true {% endif %}'
        - condition: template
          value_template: '{% if states.binary_sensor.pir_kitchen.last_updated  %} {{(as_timestamp(now())-as_timestamp(states.binary_sensor.pir_kitchen.attributes.last_updated)) > 300 }} {% else %} true {% endif %}'
        - condition: template
          value_template: '{% if states.binary_sensor.proyhome.last_updated  %} {{(as_timestamp(now())-as_timestamp(states.binary_sensor.proyhome.attributes.last_updated)) > 300 }} {% else %} true {% endif %}'
        - condition: template
          value_template: '{% if states.binary_sensor.hanshome.last_updated  %} {{(as_timestamp(now())-as_timestamp(states.binary_sensor.hanshome.attributes.last_updated)) > 300 }} {% else %} true {% endif %}'
  action:
     - service: switch.turn_on
       entity_id: switch.bedroom
     - service: mqtt.publish
       data_template:
          topic: "home/sound/pi1"
          payload_template: 'doorbuzz.ogg'
     - service: tts.picotts_say
       entity_id: media_player.hall_speaker
       data:
          message: "Door opened"
     - service: notify.matrix
       data:
          message: "Door opened, please check! @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
- id: motion_overloop
  alias: Motion Overloop
  trigger:
      platform: state
      entity_id: binary_sensor.pir_overloop
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: alarm_control_panel.alarm_system
      state: armed_away
  action:
     - service: mqtt.publish
       data_template:
          topic: "home/sound/pi1"
          payload_template: 'redalert.ogg'
     - service: media_player.play_media
       data:
          entity_id: media_player.hall_speaker
          media_content_id: file:///home/homeautomation/homeassistant/media/intruderalert.ogg
          media_content_type: 'music'
     - service: notify.matrix
       data:
          message: "overloop motion detected, please check immediately! @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
     - service: input_select.select_option
       data:
          entity_id: input_select.ipcam_direction
          option: Hall
     - service: timer.start
       entity_id: timer.reset_ipcam
- id: hall_light_off
  alias: "Hall light off"
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'on'
      to: 'off'
      for:
          minutes: 5
  action:
    - service: switch.turn_off
      entity_id: switch.hall
- id: back_door_opened
  alias: "back door opened"
  trigger:
    - platform: state
      entity_id: binary_sensor.back_door
      from: 'off'
      to: 'on'
  action:
    - service: input_select.select_option
      data:
          entity_id: input_select.ipcam_direction
          option: Back
    - delay:
        seconds: 2
    - service: script.turn_on
      entity_id: script.reset_guard_lights
    - service: timer.start
      entity_id: timer.reset_ipcam
    - service: script.turn_on
      entity_id: script.reset_fireplace
    - delay:
        seconds: 4
    - service: shell_command.event_snapshots
      data:
          cams: "livingroom"
- id: window_upstairs_opened
  alias: "Window upstairs opened"
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_window_left
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bedroom_window_right
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bathroom_window_sensor
      from: 'off'
      to: 'on'
  action:
    - service: input_select.select_option
      data:
          entity_id: input_select.ipcam_direction
          option: Hall
    - service: timer.start
      entity_id: timer.reset_ipcam
- id: home_greeting
  alias: "Home Greeting"
  trigger: #when doors close on reentry
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: binary_sensor.back_door
      from: 'on'
      to: 'off'
  condition: #and we were not home
    - condition: state
      entity_id: input_boolean.inside_house
      state: "off"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.inside_house
    - delay:
        seconds: 20
    - service: mqtt.publish
      data:
          topic: "home/say/pi1"
          payload: "Welcome home"
- id: home_greeting_proycon
  alias: "Home Greeting proycon"
  trigger: #when doors close on reentry
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: binary_sensor.back_door
      from: 'on'
      to: 'off'
  condition: #and we were not home
    - condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.proycon_inside_house
          state: "off"
        - condition: or
          conditions:
            - condition: state
              entity_id: device_tracker.proyphone
              state: "home"
            - condition: state
              entity_id: device_tracker.pinephone
              state: "home"
        - condition: state
          entity_id: input_boolean.inside_house
          state: "on"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.proycon_inside_house
    - delay:
        seconds: 10
    - service: mqtt.publish
      data:
          topic: "home/say/pi1"
          payload: "Hello Martin"
- id: home_greeting_hans
  alias: "Home Greeting Hans"
  trigger: #when doors close on reentry
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: binary_sensor.back_door
      from: 'on'
      to: 'off'
  condition: #and we were not home
    - condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.hans_inside_house
          state: "off"
        - condition: state
          entity_id: device_tracker.hansphone
          state: "home"
        - condition: state
          entity_id: input_boolean.inside_house
          state: "on"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.hans_inside_house
    - delay:
        seconds: 10
    - service: mqtt.publish
      data:
          topic: "home/say/pi1"
          payload: "Hello Hans"
- id: home_greeting_guest
  alias: "Home Greeting Guest"
  trigger: #when doors close on reentry
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: binary_sensor.back_door
      from: 'on'
      to: 'off'
  condition: #and we were not home
    - condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.guest_inside_house
          state: "off"
        - condition: or
          conditions:
            - condition: state
              entity_id: device_tracker.chris
              state: "home"
            - condition: state
              entity_id: device_tracker.evelynda
              state: "home"
            - condition: state
              entity_id: device_tracker.erik
              state: "home"
            - condition: state
              entity_id: device_tracker.patrick
              state: "home"
            - condition: state
              entity_id: device_tracker.netty
              state: "home"
            - condition: state
              entity_id: device_tracker.jan
              state: "home"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.guest_inside_house
    - delay:
        seconds: 20
    - service: mqtt.publish
      data:
          topic: "home/say/pi1"
          payload: "Hello Visitor"

- id: guest_left_house
  alias: Guest Left House
  trigger:
    - platform: state
      entity_id: device_tracker.chris
      from: 'home'
      to: 'not_home'
      for:
          minutes: 10
    - platform: state
      entity_id: device_tracker.evelynda
      from: 'home'
      to: 'not_home'
      for:
          minutes: 10
    - platform: state
      entity_id: device_tracker.erik
      from: 'home'
      to: 'not_home'
      for:
          minutes: 10
    - platform: state
      entity_id: device_tracker.patrick
      from: 'home'
      to: 'not_home'
      for:
          minutes: 10
    - platform: state
      entity_id: device_tracker.netty
      from: 'home'
      to: 'not_home'
      for:
          minutes: 10
    - platform: state
      entity_id: device_tracker.jan
      from: 'home'
      to: 'not_home'
      for:
          minutes: 10
  condition:
    - condition: and
      conditions:
        - condition: state
          entity_id: device_tracker.chris
          state: "not_home"
        - condition: state
          entity_id: device_tracker.evelynda
          state: "not_home"
        - condition: state
          entity_id: device_tracker.erik
          state: "not_home"
        - condition: state
          entity_id: device_tracker.patrick
          state: "not_home"
        - condition: state
          entity_id: device_tracker.netty
          state: "not_home"
        - condition: state
          entity_id: device_tracker.jan
          state: "not_home"
  action:
     - service: input_boolean.turn_off
       entity_id: input_boolean.guest_inside_house

- id: proycon_left_house
  alias: Proycon Left House
  trigger:
    - platform: state
      entity_id: device_tracker.proyphone
      from: 'home'
      to: 'not_home'
      for:
          minutes: 10
    - platform: state
      entity_id: device_tracker.pinephone
      from: 'home'
      to: 'not_home'
      for:
          minutes: 10
  action:
    - condition: and
      conditions:
        - condition: state
          entity_id: device_tracker.proyphone
          state: "not_home"
        - condition: state
          entity_id: device_tracker.pinephone
          state: "not_home"
    - service: input_boolean.turn_off
      entity_id: input_boolean.proycon_inside_house
- id: hans_left_house
  alias: Hans Left House
  trigger:
    - platform: state
      entity_id: device_tracker.hansphone
      from: 'home'
      to: 'not_home'
      for:
          minutes: 10
  action:
     - service: input_boolean.turn_off
       entity_id: input_boolean.hans_inside_house
- id: coming_home_notification
  alias: Coming Home Notification
  trigger:
    - platform: state
      entity_id: device_tracker.proyphone
      from: 'not_home'
      to: 'home'
    - platform: state
      entity_id: device_tracker.pinephone
      from: 'not_home'
      to: 'home'
    - platform: state
      entity_id: device_tracker.hansphone
      from: 'not_home'
      to: 'home'
  action:
    - condition: time
      after: '9:30'
      before: '23:00'
    - service: media_player.play_media
      data:
         entity_id: media_player.hall_speaker
         media_content_id: file:///home/homeautomation/homeassistant/media/authaccept.mp3
         media_content_type: 'music'
    - delay:
        seconds: 2
    - service: mqtt.publish
      data:
          topic: "home/say/pi1"
          payload: "Coming home"
- id: both_left_house
  alias: Both Left House
  trigger:
    - platform: state
      entity_id: input_boolean.proycon_inside_house
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: input_boolean.hans_inside_house
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: input_boolean.guest_inside_house
      from: 'on'
      to: 'off'
  condition:
    - condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.proycon_inside_house
          state: "off"
        - condition: state
          entity_id: input_boolean.hans_inside_house
          state: "off"
        - condition: state
          entity_id: input_boolean.guest_inside_house
          state: "off"
  action:
     - service: input_boolean.turn_off
       entity_id: input_boolean.inside_house
     - service: script.turn_on
       entity_id: script.turn_media_off
- id: office_morning_lights_off_hans
  alias: office_morning Lights off Hans
  trigger:
      - platform: time
        at: '06:00:00'
  condition:
      condition: time
      weekday:
          - mon
          - tue
          - thu
          - fri
  action:
       - service: switch.turn_off
         entity_id: switch.office
- id: ignite_fireplace_in_evening
  alias: Ignite fireplace in evening
  trigger:
     platform: sun
     event: sunset
     offset: '2:00:00'
  condition:
     - condition: and
       conditions:
         - condition: state
           entity_id: binary_sensor.anybodyhome
           state: "on"
         - condition: time
           after: '17:00'
           before: '23:00'
  action:
     - service: input_select.select_option
       data:
           entity_id: input_select.fireplace
           option: Fire
     - service: input_number.set_value
       data:
           entity_id: input_number.fireplace_brightness
           value: 255
     - service: input_number.set_value
       data:
           entity_id: input_number.dresser_ambilight_brightness
           value: 40
     - service: input_select.select_option
       data:
           entity_id: input_select.dresser_ambilight
           option: Lamp
     - delay:
           seconds: 1
     - service: script.turn_on
       entity_id: script.ignite_fireplace
     - service: script.turn_on
       entity_id: script.ignite_dresser_ambilight

- id: alarm_cancelled
  alias: Alarm Cancelled
  trigger:
    - platform: state
      entity_id: alarm_control_panel.alarm_system
      from: 'triggered'
      to: 'disarmed'
  action:
      - service: script.turn_off
        entity_id: script.alarm_iteration
      - service: script.turn_off
        entity_id: script.alarm
      - service: script.turn_off
        entity_id: script.sirene_lights
      - service: timer.start
        data:
            entity_id: timer.reset_ipcam
      - service: script.turn_on
        data:
            entity_id: script.reset_fireplace
      - service: script.turn_on
        data:
            entity_id: script.reset_lights
      - service: notify.mail_both
        data_template:
           title: "[homeautomation] Alarm cancelled {{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
           message: "Alarm cancelled {{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
      - service: persistent_notification.create
        data_template:
           message: "Alarm cancelled {{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
           title: "Alarm cancelled {{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
      - service: notify.matrix
        data:
           message: "Alarm cancelled @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
      - service: notify.sms
        data_template:
           message: "Alarm cancelled @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
           target:
              - !secret proyphone
              - !secret hansphone

- id: kitchen_light_on_motion
  alias: Kitchen Light On Motion
  trigger:
      platform: state
      entity_id: binary_sensor.pir_kitchen
      from: "off"
      to: "on"
  condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.anybodyhome
          state: "on"
        - condition: numeric_state
          entity_id: sensor.fibaro_multisensor_luminance
          below: 40
        - condition: state
          entity_id: switch.kitchen
          state: "off"
  action:
      - service: switch.turn_on
        entity_id: switch.kitchen

- id: kitchen_light_off
  alias: Kitchen Light Off
  trigger:
      platform: state
      entity_id: binary_sensor.pir_kitchen
      from: "on"
      to: "off"
      for:
          minutes: 5
  action:
      - service: switch.turn_off
        entity_id: switch.kitchen

- id: office_light_on_motion
  alias: Office Light On Motion
  trigger:
      platform: state
      entity_id: binary_sensor.pir_office
      from: "off"
      to: "on"
  condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.anybodyhome
          state: "on"
        - condition: numeric_state
          entity_id: sensor.fibaro_office_luminance
          below: 10
        - condition: state
          entity_id: switch.office
          state: "off"
  action:
      - service: switch.turn_on
        entity_id: switch.office

- id: office_light_off
  alias: Office Light Off
  trigger:
      platform: state
      entity_id: binary_sensor.pir_office
      from: "on"
      to: "off"
      for:
          minutes: 30
  action:
      - service: switch.turn_off
        entity_id: switch.office

- id: office_light_off_night
  alias: Office Light Off Night
  trigger:
      platform: state
      entity_id: binary_sensor.pir_office
      from: "on"
      to: "off"
      for:
          minutes: 2
  condition:
       condition: and
       conditions:
          - condition: time
            after: '22:00'
            before: '06:00'
          - condition: state
            entity_id: binary_sensor.anybodyhome
            state: "on"
          - condition: state
            entity_id: switch.tv_spots
            state: "off"
  action:
      - service: switch.turn_off
        entity_id: switch.office

- id: hall_light_on_motion
  alias: hall Light On Motion
  trigger:
    - platform: state
      entity_id: binary_sensor.pir_hall
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.pir_overloop
      from: "off"
      to: "on"
  condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.anybodyhome
          state: "on"
        - condition: state
          entity_id: switch.hall
          state: "off"
        - condition: or
          conditions:
            - condition: numeric_state
              entity_id: sensor.fibaro_hall_luminance
              below: 10
            - condition: time
              after: '22:00'
              before: '07:00'
  action:
      - service: switch.turn_on
        entity_id: switch.hall

- id: hall_light_off_after_motion
  alias: Hall Light Off after motion
  trigger:
    - platform: state
      entity_id: binary_sensor.pir_hall
      from: "on"
      to: "off"
      for:
          seconds: 90
    - platform: state
      entity_id: binary_sensor.pir_overloop
      from: "on"
      to: "off"
      for:
          seconds: 90
  condition:
      - condition: state
        entity_id: binary_sensor.front_door
        state: "off"
      - condition: state
        entity_id: binary_sensor.pir_hall
        state: "off"
  action:
      - service: switch.turn_off
        entity_id: switch.hall

- id: wake_up
  alias: 'Wake up'
  trigger:
    platform: template
    value_template: '{{ states.sensor.time.state == states.sensor.wake_up_time.state }}'
  action:
    - service: script.turn_on
      entity_id: script.wake_up_alarm
    - delay:
        seconds: 120

#- alias: OldStreetcam Reset
#  trigger:
#    platform: time
#    minutes: "/10"
#    seconds: 00
#  action:
#    - service: shell_command.oldstreetcam_reset_1
#    - delay:
#        seconds: 10
#   - service: shell_command.oldstreetcam_reset_2


- alias: Bathroom Vent On
  trigger:
    - platform: state
      entity_id: binary_sensor.bathroom_too_humid
      to: "on"
      for:
         minutes: 20
    - platform: mqtt
      topic: "home/command/bathroom_vent/on"
  condition:
      condition: and
      conditions:
        - condition: time
          after: '9:30'
          before: '23:00'
        - condition: state
          entity_id: switch.bathroom_vent
          state: "off"
  action:
      - service: switch.turn_on
        entity_id: switch.bathroom_vent

- alias: Bathroom Vent Off
  trigger:
    - platform: numeric_state
      entity_id: sensor.bathroom_sensor_relative_humidity
      below: 70
    - platform: mqtt
      topic: "home/command/bathroom_vent/off"
  condition:
    - condition: state
      entity_id: switch.bathroom_vent
      state: "on"
  action:
      - service: switch.turn_off
        entity_id: switch.bathroom_vent

- alias: Bathroom Vent Off After a While
  trigger:
    platform: state
    entity_id: switch.bathroom_vent
    from: "off"
    to: "on"
    for:
        minutes: 30
  condition:
    - condition: state
      entity_id: switch.bathroom_vent
      state: "on"
  action:
      - service: switch.turn_off
        entity_id: switch.bathroom_vent

- alias: Night light on motion
  trigger:
      platform: state
      entity_id: binary_sensor.pir_living_room
      from: "off"
      to: "on"
  condition:
      condition: and
      conditions:
        - condition: time
          after: '22:00'
          before: '09:00'
        - condition: state
          entity_id: binary_sensor.anybodyhome
          state: "on"
        - condition: state
          entity_id: sun.sun
          state: "below_horizon"
        - condition: state
          entity_id: switch.tv_spots
          state: "off"
        - condition: state
          entity_id: switch.front_room
          state: "off"
        - condition: state
          entity_id: switch.back_room
          state: "off"
        - condition: state
          entity_id: switch.back_corner
          state: "off"
        - condition: state
          entity_id: switch.midspots
          state: "off"
  action:
     - service: input_number.set_value
       data:
           entity_id: input_number.dresser_ambilight_brightness
           value: 255
     - service: input_select.select_option
       data:
           entity_id: input_select.dresser_ambilight
           option: Red
     - delay:
           seconds: 1
     - service: script.turn_on
       entity_id: script.ignite_dresser_ambilight

- alias: Night light off
  trigger:
      platform: state
      entity_id: binary_sensor.pir_living_room
      from: "on"
      to: "off"
      for:
          minutes: 5
  condition:
      condition: template
      value_template: '{% if states.automation.night_light_on_motion.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.night_light_on_motion.attributes.last_triggered)) < 90 }} {% else %} false {% endif %}'
  action:
     - service: script.turn_on
       entity_id: script.extinguish_dresser_ambilight

- alias: SoftRemote Night Scene TV already on
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.downstairs_remote
      scene_id: 10 #Plus button (10: closed circle, 20: plus, 30: open circle, 40: minus)
  condition:
      condition: and
      conditions:
        - condition: time
          after: '20:30'
          before: '07:00'
        - condition: state
          entity_id: binary_sensor.anybodyhome
          state: "on"
        - condition: state
          entity_id: sun.sun
          state: "below_horizon"
        - condition: state
          entity_id: switch.tv
          state: "on"
  action:
      - service: script.turn_on
        entity_id: script.night_scene

- alias: SoftRemote Night Scene
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.downstairs_remote
      scene_id: 10 #Plus button (10: closed circle, 20: plus, 30: open circle, 40: minus)
  condition:
      condition: and
      conditions:
        - condition: time
          after: '20:30'
          before: '01:00'
        - condition: state
          entity_id: binary_sensor.anybodyhome
          state: "on"
        - condition: state
          entity_id: sun.sun
          state: "below_horizon"
        - condition: state
          entity_id: switch.tv
          state: "off"
  action:
      - service: script.turn_on
        entity_id: script.night_scene
      - service: script.turn_on
        entity_id: script.watch_tv

- alias: SoftRemote Volume up
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.downstairs_remote
      scene_id: 20 #Plus button (10: closed circle, 20: plus, 30: open circle, 40: minus)
  condition:
      - condition: state
        entity_id: media_player.yamaha_receiver
        state: "on"
  action:
      - service: media_player.volume_set
        entity_id: media_player.yamaha_receiver
        data_template:
           volume_level: '{{ states.media_player.yamaha_receiver.attributes.volume_level + 0.05 }}'


- alias: SoftRemote Volume down
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.downstairs_remote
      scene_id: 40 #Minus button (10: closed circle, 20: plus, 30: open circle, 40: minus)
  condition:
      - condition: state
        entity_id: media_player.yamaha_receiver
        state: "on"
  action:
      - service: media_player.volume_set
        entity_id: media_player.yamaha_receiver
        data_template:
           volume_level: '{{ states.media_player.yamaha_receiver.attributes.volume_level - 0.05 }}'


- alias: SoftRemote Mute
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.downstairs_remote
      scene_id: 30 #Open circle button (10: closed circle, 20: plus, 30: open circle, 40: minus)
  condition:
      - condition: state
        entity_id: media_player.yamaha_receiver
        state: "on"
  action:
      - service: script.turn_on
        entity_id: script.avr_mute

- alias: Master off switch
  trigger:
      - platform: event
        event_type: zwave.scene_activated
        event_data:
          entity_id: zwave.downstairs_remote
          scene_id: 13 #Doubleclick on closed circle button (10: closed circle, 20: plus, 30: open circle, 40: minus)
      - platform: event
        event_type: zwave.scene_activated
        event_data:
          entity_id: zwave.remotec_zrc90
          scene_id: 1
          scene_data: 3 #0 = single press, 2 = continued press, 1 = release, 3 = double press
  condition:
      condition: and
      conditions:
          - condition: state
            entity_id: binary_sensor.anybodyhome
            state: "on"
  action:
      - service: script.turn_on
        entity_id: script.lights_off
      - service: script.turn_on
        entity_id: script.turn_media_off

- alias: Master on switch
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.downstairs_remote
      scene_id: 33 #Doubleclick on open circle button (10: closed circle, 20: plus, 30: open circle, 40: minus)
  condition:
      condition: and
      conditions:
          - condition: state
            entity_id: binary_sensor.anybodyhome
            state: "on"
  action:
      - service: script.turn_on
        entity_id: script.lights_on

- alias: SoftRemote Channel Up Switch
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.downstairs_remote
      scene_id: 43 #Doubleclick on minus circle button (10: closed circle, 20: plus, 30: open circle, 40: minus)
  condition:
      condition: and
      conditions:
          - condition: state
            entity_id: media_player.yamaha_receiver
            state: "on"
  action:
      service: script.turn_on
      entity_id: script.tvdecoder_channeldown

- alias: SoftRemote Channel Down Switch
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.downstairs_remote
      scene_id: 23 #Doubleclick on plus circle button (10: closed circle, 20: plus, 30: open circle, 40: minus)
  condition:
      condition: and
      conditions:
          - condition: state
            entity_id: media_player.yamaha_receiver
            state: "on"
  action:
      service: script.turn_on
      entity_id: script.tvdecoder_channelup

- alias: SoftRemote Watch TV
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.downstairs_remote
      scene_id: 23 #Doubleclick on plus circle button (10: closed circle, 20: plus, 30: open circle, 40: minus)
  condition:
      condition: and
      conditions:
          - condition: state
            entity_id: switch.tv
            state: "off"
  action:
      service: script.turn_on
      entity_id: script.watch_tv

- alias: SoftRemote Away Switch
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.downstairs_remote
      scene_id: 43 #Doubleclick on minus circle button (10: closed circle, 20: plus, 30: open circle, 40: minus)
  condition:
      condition: and
      conditions:
          - condition: state
            entity_id: binary_sensor.anybodyhome
            state: "on"
          - condition: state
            entity_id: alarm_control_panel.alarm_system
            state: "disarmed"
          - condition: state
            entity_id: media_player.yamaha_receiver
            state: "off"
          - condition: state
            entity_id: switch.tv
            state: "off"
  action:
    - service: tts.picotts_say
      entity_id: media_player.hall_speaker
      data:
          message: "Arming system in two minutes, good bye"
    - service: mqtt.publish
      data:
          topic: "home/say/pi1"
          payload: "Arming system in two minutes, good bye"
    - delay:
        minutes: 2
    - service: alarm_control_panel.alarm_arm_away
      entity_id: alarm_control_panel.alarm_system
    - service: tts.picotts_say
      entity_id: media_player.hall_speaker
      data:
          message: "System armed"

- alias: SoftRemote Cancel Away Switch
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.downstairs_remote
      scene_id: 43 #Doubleclick on minus circle button (10: closed circle, 20: plus, 30: open circle, 40: minus)
  condition:
      condition: and
      conditions:
          - condition: state
            entity_id: binary_sensor.anybodyhome
            state: "on"
          - condition: state
            entity_id: alarm_control_panel.alarm_system
            state: "pending"
          - condition: state
            entity_id: media_player.yamaha_receiver
            state: "off"
  action:
    - service: tts.picotts_say
      entity_id: media_player.hall_speaker
      data:
          message: "Cancelled"
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.alarm_system

- alias: Pi 1 down
  trigger:
    - platform: state
      entity_id: device_tracker.pi1
      from: 'home'
      to: 'not_home'
      for:
          minutes: 5
  action:
    - service: persistent_notification.create
      data_template:
          message: "Pi 1 is down @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
          title: "Pi 1 is down"
    - service: notify.matrix
      data:
          message: "Pi 1 is down @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
    - service: notify.mail_both
      data_template:
          title: "[homeautomation] Pi 1 is down"
          message: "Pi 1 is down"

- alias: Pi 2 down
  trigger:
    - platform: state
      entity_id: device_tracker.pi2
      from: 'home'
      to: 'not_home'
      for:
          minutes: 5
  action:
    - service: persistent_notification.create
      data_template:
          message: "Pi 2 is down @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
          title: "Pi 2 is down"
    - service: notify.matrix
      data:
          message: "Pi 2 is down @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
    - service: notify.mail_both
      data_template:
          title: "[homeautomation] Pi 2 is down"
          message: "Pi 2 is down"

- alias: Pi 3 down
  trigger:
    - platform: state
      entity_id: device_tracker.pi3
      from: 'home'
      to: 'not_home'
      for:
          minutes: 5
  action:
    - service: persistent_notification.create
      data_template:
          message: "Pi 3 is down @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
          title: "Pi 3 is down"
    - service: notify.matrix
      data:
          message: "Pi 3 is down @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
    - service: notify.mail_both
      data_template:
          title: "[homeautomation] Pi 3 is down"
          message: "Pi 3 is down"

- alias: kpn_router_down
  trigger:
    - platform: state
      entity_id: device_tracker.kpn_router
      from: 'home'
      to: 'not_home'
      for:
          minutes: 5
  action:
    - service: persistent_notification.create
      data_template:
          message: "KPN router is down @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
          title: "KPN router is down"
    - service: notify.matrix
      data:
          message: "KPN router is down @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
    - service: notify.mail_both
      data_template:
          title: "[homeautomation] KPN router is down"
          message: "KPN router is down"

- alias: wifi_router_down
  trigger:
    - platform: state
      entity_id: device_tracker.wifi_router
      from: 'home'
      to: 'not_home'
      for:
          minutes: 5
  action:
    - service: persistent_notification.create
      data_template:
          message: "wifi router is down @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
          title: "wifi router is down"
    - service: notify.matrix
      data:
          message: "wifi router is down @{{ now().strftime('%Y-%m-%d [%H:%M:%S]') }}"
    - service: notify.mail_both
      data_template:
          title: "[homeautomation] wifi router is down"
          message: "wifi router is down"


- alias: command_switch_on
  trigger:
      - platform: mqtt
        topic: home/command/switch/#
        payload: on
  action:
      service: switch.turn_on
      data_template:
          entity_id: "switch.{{ trigger.topic.split('/')[-1] }}"
- alias: command_switch_off
  trigger:
      - platform: mqtt
        topic: home/command/switch/#
        payload: off
  action:
      service: switch.turn_off
      data_template:
          entity_id: "switch.{{ trigger.topic.split('/')[-1] }}"
- alias: command_script_on
  trigger:
      - platform: mqtt
        topic: home/command/script/#
        payload: on
  action:
      service: script.turn_on
      data_template:
          entity_id: "script.{{ trigger.topic.split('/')[-1] }}"
- alias: command_script_off
  trigger:
      - platform: mqtt
        topic: home/command/script/#
        payload: off
  action:
      service: script.turn_off
      data_template:
          entity_id: "script.{{ trigger.topic.split('/')[-1] }}"

- alias: office_light_button
  trigger:
      - platform: state
        entity_id: sensor.fibaro_office_burglar
        to: '3' #seismic or tamper sensor
  action:
        service: switch.turn_on
        entity_id: switch.office

- alias: kitchen_light_button
  trigger:
      - platform: state
        entity_id: sensor.fibaro_multisensor_burglar
        to: '3' #seismic or tamper sensor
  action:
        service: switch.turn_on
        entity_id: switch.kitchen



- id: remote_lights_on
  alias: remote8_lights_on
  condition:
      - condition: state
        entity_id: switch.midspots
        state: "off"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 1
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/lights/on"
  action:
      service: script.turn_on
      entity_id: script.lights_on

- id: remote_lights_off
  alias: remote8_lights_off
  condition:
      - condition: state
        entity_id: switch.tv_spots
        state: "on"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 1
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 7
        scene_data: 2 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/lights/off"
  action:
      service: script.turn_on
      entity_id: script.lights_off

- id: remote_night_scene
  alias: remote_night_scene
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 2
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 7
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/lights/night"
  action:
      service: script.turn_on
      entity_id: script.night_scene

- id: remote_evening_scene
  alias: remote_evening_scene
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 2
        scene_data: 3 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/lights/evening"
  action:
      service: script.turn_on
      entity_id: script.evening_scene

- id: remote_fireplace_on
  alias: remote8_fireplace_on
  condition:
      - condition: state
        entity_id: switch.technofire
        state: "off"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 3
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 7
        scene_data: 2 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/lights/fireplace/on"
  action:
     - service: input_select.select_option
       data:
           entity_id: input_select.fireplace
           option: Fire
     - service: input_number.set_value
       data:
           entity_id: input_number.fireplace_brightness
           value: 255
     - service: input_number.set_value
       data:
           entity_id: input_number.dresser_ambilight_brightness
           value: 40
     - service: input_select.select_option
       data:
           entity_id: input_select.dresser_ambilight
           option: Lamp
     - delay:
           seconds: 1
     - service: script.turn_on
       entity_id: script.ignite_fireplace
     - service: script.turn_on
       entity_id: script.ignite_dresser_ambilight

- id: remote_fireplace_off
  alias: remote8_fireplace_off
  condition:
      - condition: state
        entity_id: switch.technofire
        state: "on"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 3
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/lights/fireplace/off"
  action:
     - service: script.turn_on
       entity_id: script.extinguish_dresser_ambilight
     - service: script.turn_on
       entity_id: script.extinguish_fireplace

- id: remote_ambilight_cycle
  alias: remote8_ambilight_cycle
  condition:
      - condition: state
        entity_id: switch.technofire
        state: "off"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 3
        scene_data: 3 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/lights/ambilight/on"
  action:
     - service: input_select.select_option
       data:
           entity_id: input_select.fireplace
           option: Fire
     - service: input_number.set_value
       data:
           entity_id: input_number.fireplace_brightness
           value: 255
     - service: input_number.set_value
       data:
           entity_id: input_number.dresser_ambilight_brightness
           value: 40
     - service: input_select.select_option
       data:
           entity_id: input_select.dresser_ambilight
           option: Colorcycle Slow
     - delay:
           seconds: 1
     - service: script.turn_on
       entity_id: script.ignite_fireplace
     - service: script.turn_on
       entity_id: script.ignite_dresser_ambilight

- id: remote_lights_office_on
  alias: remote_lights_office_on
  trigger:
    - platform: mqtt
      topic: "home/command/lights/office/on"
  action:
      service: switch.turn_on
      entity_id: switch.office
- id: remote_lights_office_off
  alias: remote_lights_office_off
  trigger:
    - platform: mqtt
      topic: "home/command/lights/office/off"
  action:
      service: switch.turn_off
      entity_id: switch.office
- id: remote_lights_back_room_on
  alias: remote_lights_back_room_on
  trigger:
    - platform: mqtt
      topic: "home/command/lights/back_room/on"
  action:
      service: switch.turn_on
      entity_id: switch.back_room
- id: remote_lights_back_room_off
  alias: remote_lights_back_room_off
  trigger:
    - platform: mqtt
      topic: "home/command/lights/back_room/off"
  action:
      service: switch.turn_off
      entity_id: switch.back_room
- id: remote_lights_front_room_on
  alias: remote_lights_front_room_on
  trigger:
    - platform: mqtt
      topic: "home/command/lights/front_room/on"
  action:
      service: switch.turn_on
      entity_id: switch.front_room
- id: remote_lights_front_room_off
  alias: remote_lights_front_room_off
  trigger:
    - platform: mqtt
      topic: "home/command/lights/front_room/off"
  action:
      service: switch.turn_off
      entity_id: switch.front_room
- id: remote_lights_midspots_on
  alias: remote_lights_midspots_on
  trigger:
    - platform: mqtt
      topic: "home/command/lights/midspots/on"
  action:
      service: switch.turn_on
      entity_id: switch.midspots
- id: remote_lights_midspots_off
  alias: remote_lights_midspots_off
  trigger:
    - platform: mqtt
      topic: "home/command/lights/midspots/off"
  action:
      service: switch.turn_off
      entity_id: switch.midspots
- id: remote_lights_tv_spots_on
  alias: remote_lights_tv_spots_on
  trigger:
    - platform: mqtt
      topic: "home/command/lights/tv_spots/on"
  action:
      service: switch.turn_on
      entity_id: switch.tv_spots
- id: remote_lights_tv_spots_off
  alias: remote_lights_tv_spots_off
  trigger:
    - platform: mqtt
      topic: "home/command/lights/tv_spots/off"
  action:
      service: switch.turn_off
      entity_id: switch.tv_spots
- id: remote_lights_back_corner_on
  alias: remote_lights_back_corner_on
  trigger:
    - platform: mqtt
      topic: "home/command/lights/back_corner/on"
  action:
      service: switch.turn_on
      entity_id: switch.back_corner
- id: remote_lights_back_corner_off
  alias: remote_lights_back_corner_off
  trigger:
    - platform: mqtt
      topic: "home/command/lights/back_corner/off"
  action:
      service: switch.turn_off
      entity_id: switch.back_corner
- id: remote_lights_balcony_on
  alias: remote_lights_balcony_on
  trigger:
    - platform: mqtt
      topic: "home/command/lights/balcony/on"
  action:
      service: switch.turn_on
      entity_id: switch.balcony
- id: remote_lights_balcony_off
  alias: remote_lights_balcony_off
  trigger:
    - platform: mqtt
      topic: "home/command/lights/balcony/off"
  action:
      service: switch.turn_off
      entity_id: switch.balcony
- id: remote_lights_garden_on
  alias: remote_lights_garden_on
  trigger:
    - platform: mqtt
      topic: "home/command/lights/garden/on"
  action:
      service: switch.turn_on
      entity_id: switch.garden
- id: remote_lights_garden_off
  alias: remote_lights_garden_off
  trigger:
    - platform: mqtt
      topic: "home/command/lights/garden/off"
  action:
      service: switch.turn_off
      entity_id: switch.garden
- id: remote_lights_kitchen_on
  alias: remote_lights_kitchen_on
  trigger:
    - platform: mqtt
      topic: "home/command/lights/kitchen/on"
  action:
      service: switch.turn_on
      entity_id: switch.kitchen
- id: remote_lights_kitchen_off
  alias: remote_lights_kitchen_off
  trigger:
    - platform: mqtt
      topic: "home/command/lights/kitchen/off"
  action:
      service: switch.turn_off
      entity_id: switch.kitchen
- id: remote_lights_hall_on
  alias: remote_lights_hall_on
  trigger:
    - platform: mqtt
      topic: "home/command/lights/hall/on"
  action:
      service: switch.turn_on
      entity_id: switch.hall
- id: remote_lights_hall_off
  alias: remote_lights_hall_off
  trigger:
    - platform: mqtt
      topic: "home/command/lights/hall/off"
  action:
      service: switch.turn_off
      entity_id: switch.hall
- id: remote_lights_bedroom_on
  alias: remote_lights_bedroom_on
  trigger:
    - platform: mqtt
      topic: "home/command/lights/bedroom/on"
  action:
      service: switch.turn_on
      entity_id: switch.bedroom
- id: remote_lights_bedroom_off
  alias: remote_lights_bedroom_off
  trigger:
    - platform: mqtt
      topic: "home/command/lights/bedroom/off"
  action:
      service: switch.turn_off
      entity_id: switch.bedroom

- id: remote_tv_on
  alias: remote_tv_on
  condition:
    - condition: state
      entity_id: switch.tv
      state: "off"
    - condition: or
      conditions:
        - condition: state
          entity_id: media_player.mpd
          state: "off"
        - condition: state
          entity_id: media_player.mpd
          state: "paused"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 5
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 2
        scene_data: 3 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/media/tv"
  action:
     - service: script.turn_on
       entity_id: script.watch_tv

- id: remote_mute
  alias: remote_mute
  condition:
    - condition: state
      entity_id: switch.tv
      state: "on"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 5
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 8
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/mute"
  action:
     - service: script.turn_on
       entity_id: script.avr_mute

- id: remote_media_off
  alias: remote_media_off
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 5
        scene_data: 3 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 8
        scene_data: 2 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/media/off"
  action:
     - service: script.turn_on
       entity_id: script.turn_media_off

- id: remote_music_on
  alias: remote_music_on
  condition: #so we don't accidentally start music when TV is on
    - condition: state
      entity_id: switch.tv
      state: "off"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 6
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 4
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/media/music"
  action:
     - service: script.turn_on
       entity_id: script.listen_to_music

- id: remote_music_off
  alias: remote_music_on
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 6
        scene_data: 3 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 4
        scene_data: 3 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/music/off"
  action:
     - service: media_player.media_stop
       entity_id: media_player.mpd
     - service: switch.turn_off
       entity_id: switch.pi1_music_player

- id: remote_music_load
  alias: remote_music_load
  condition: #so we don't accidentally start music when TV is on
    - condition: state
      entity_id: switch.tv
      state: "off"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 6
        scene_data: 2 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 4
        scene_data: 2 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/music/load"
  action:
     - service: script.turn_on
       entity_id: script.mpc_playlist

- id: remote_music_next
  alias: remote_music_next
  condition:
    - condition: state
      entity_id: switch.tv
      state: "off"
    - condition: or
      conditions:
        - condition: state
          entity_id: media_player.mpd
          state: "playing"
        - condition: state
          entity_id: media_player.mpd
          state: "paused"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 6
        scene_data: 2 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 2
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/music/next"
  action:
     - service: media_player.media_next_track
       entity_id: media_player.mpd

- id: remote_music_prev
  alias: remote_music_prev
  condition:
    - condition: state
      entity_id: switch.tv
      state: "off"
    - condition: or
      conditions:
        - condition: state
          entity_id: media_player.mpd
          state: "playing"
        - condition: state
          entity_id: media_player.mpd
          state: "paused"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 6
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/music/previous"
  action:
     - service: media_player.media_previous_track
       entity_id: media_player.mpd

- id: remote_channel_next
  condition:
    - condition: state
      entity_id: switch.tv
      state: "on"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 2
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/tvdecoder/next"
  action:
     - service: script.turn_on
       entity_id: script.tvdecoder_channelup

- id: remote_cursor_right
  condition:
    - condition: state
      entity_id: switch.tv
      state: "on"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 2
        scene_data: 3 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/tvdecoder/right"
  action:
     - service: script.turn_on
       entity_id: script.tvdecoder_right

- id: remote_tv_on_manual
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 3
        scene_data: 2 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/tv/on"
  action:
    - service: mqtt.publish
      data_template:
        topic: "home/sound/pi1"
        payload_template: 'computerbeep_5.wav'
    - service: switch.turn_on
      entity_id: switch.tv

- id: remote_cursor_left
  condition:
    - condition: state
      entity_id: switch.tv
      state: "on"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 6
        scene_data: 3 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/tvdecoder/left"
  action:
     - service: script.turn_on
       entity_id: script.tvdecoder_left

- id: remote_tv_decoder_on_manual
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 6
        scene_data: 2 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/tvdecoder/on"
  action:
     - service: switch.turn_on
       entity_id: switch.tv_decoder

- id: remote_cursor_up
  condition:
    - condition: state
      entity_id: switch.tv
      state: "on"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 5
        scene_data: 3 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/tvdecoder/up"
  action:
     - service: script.turn_on
       entity_id: script.tvdecoder_up

- id: remote_cursor_down
  condition:
    - condition: state
      entity_id: switch.tv
      state: "on"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 1
        scene_data: 3 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/tvdecoder/down"
  action:
     - service: script.turn_on
       entity_id: script.tvdecoder_up

- id: remote_channel_prev
  condition:
    - condition: state
      entity_id: switch.tv
      state: "on"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 6
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/tvdecoder/previous"
  action:
     - service: script.turn_on
       entity_id: script.tvdecoder_channeldown

- id: remote_volume_up
  condition:
    - condition: state
      entity_id: media_player.yamaha_receiver
      state: "on"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 1
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/volup"
  action:
      - service: media_player.volume_set
        entity_id: media_player.yamaha_receiver
        data_template:
           volume_level: '{{ states.media_player.yamaha_receiver.attributes.volume_level + 0.05 }}'

- id: remote_volume_down
  condition:
    - condition: state
      entity_id: media_player.yamaha_receiver
      state: "on"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 5
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/voldown"
  action:
      - service: media_player.volume_set
        entity_id: media_player.yamaha_receiver
        data_template:
           volume_level: '{{ states.media_player.yamaha_receiver.attributes.volume_level - 0.05 }}'

- id: remote_playpause_tv
  condition:
    - condition: state
      entity_id: switch.tv
      state: "on"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 3
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/tvdecoder/pause"
  action:
     - service: script.turn_on
       entity_id: script.tvdecoder_playpause


- id: remote_music_pause
  alias: remote_music_pause
  condition:
    - condition: state
      entity_id: switch.tv
      state: "off"
    - condition: or
      conditions:
        - condition: state
          entity_id: media_player.mpd
          state: "playing"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 3
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/music/pauseplay"
  action:
     - service: media_player.media_pause
       entity_id: media_player.mpd

- id: remote_music_unpause
  alias: remote_music_unpause
  condition:
    - condition: state
      entity_id: switch.tv
      state: "off"
    - condition: or
      conditions:
        - condition: state
          entity_id: media_player.mpd
          state: "paused"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 3
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/music/pauseplay"
  action:
     - service: media_player.media_play
       entity_id: media_player.mpd

- id: remote_tv_ok
  condition:
    - condition: state
      entity_id: switch.tv
      state: "on"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 3
        scene_data: 2 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/tvdecoder/ok"
  action:
     - service: script.turn_on
       entity_id: script.tvdecoder_ok

- id: remote_tv_back
  condition:
    - condition: state
      entity_id: switch.tv
      state: "on"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_unknown_type_0001_id_8510
        scene_id: 3
        scene_data: 3 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/tvdecoder/back"
  action:
     - service: script.turn_on
       entity_id: script.tvdecoder_back

- id: remote_robot_on
  alias: remote_robot_on
  condition: #so we don't accidentally start robot when TV is on
    - condition: state
      entity_id: switch.tv
      state: "off"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 7
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/robot/on"
  action:
     - service: script.turn_on
       entity_id: script.vacuum_turn_on

- id: remote_robot_off
  alias: remote_robot_off
  condition: #so we don't accidentally start robot when TV is on
    - condition: state
      entity_id: switch.tv
      state: "off"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 7
        scene_data: 3 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/robot/off"
  action:
     - service: script.turn_on
       entity_id: script.vacuum_turn_off

- id: remote_robot_pause
  alias: remote_robot_pause
  condition: #so we don't accidentally start robot when TV is on
    - condition: state
      entity_id: switch.tv
      state: "off"
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 7
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/robot/pause"
  action:
     - service: script.turn_on
       entity_id: script.vacuum_pause


- id: remote_pee
  alias: remote_pee
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 8
        scene_data: 0 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/jaiko/pee"
  action:
    - service: script.turn_on
      entity_id: script.jaiko_peed

- id: remote_pooped
  alias: remote_pooped
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 8
        scene_data: 3 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/jaiko/poop"
  action:
    - service: script.turn_on
      entity_id: script.jaiko_pooped

- id: remote_fed
  alias: remote_fed
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.remotec_zrc90
        scene_id: 8
        scene_data: 2 #0 = single press, 2 = continued press, 1 = release, 3 = double press
    - platform: mqtt
      topic: "home/command/jaiko/fed"
  action:
    - service: script.turn_on
      entity_id: script.jaiko_fed




- id: notify_livingroom_movement
  alias: Notify Livingroom Movement
  trigger:
      - platform: state
        entity_id: binary_sensor.pir_living_room
        from: "off"
        to: "on"
  condition:
      - condition: state
        entity_id: input_boolean.notify_livingroom_movement
        state: "on"
  action:
    - service: notify.matrix
      data:
          message: "Reporting movement in living room as requested (once) @{{now().strftime('%Y-%m-%d [%H:%M:%S]')}}"
    - service: mqtt.publish
      data_template:
        topic: "home/sound/pi1"
        payload_template: 'chime.wav'
    - service: input_boolean.turn_off
      entity_id: input_boolean.notify_livingroom_movement


- id: reset_wake_time
  alias: reset wake time #for the NEXT day!
  trigger:
      - platform: time
        at: '14:00:00'
  condition:
      condition: time
      weekday:
          - sun
          - mon
          - wed
          - thu
  action:
       - service: input_number.set_value
         data:
             entity_id: input_number.wake_up_hour
             value: 8
       - service: input_number.set_value
         data:
             entity_id: input_number.wake_up_minutes
             value: 30

- id: reset_wake_time_weekend
  alias: reset wake time weekend #for the NEXT day!
  trigger:
      - platform: time
        at: '14:00:00'
  condition:
      condition: time
      weekday:
          - fri
          - sat
  action:
       - service: input_number.set_value
         data:
             entity_id: input_number.wake_up_hour
             value: 10
       - service: input_number.set_value
         data:
             entity_id: input_number.wake_up_minutes
             value: 15

- id: reset_wake_time_wednesday
  alias: reset wake time wednesday #for the NEXT day!
  trigger:
      - platform: time
        at: '14:00:00'
  condition:
      condition: time
      weekday:
          - tue
  action:
       - service: input_number.set_value
         data:
             entity_id: input_number.wake_up_hour
             value: 9
       - service: input_number.set_value
         data:
             entity_id: input_number.wake_up_minutes
             value: 00

- id: thermostat_morning_hanswork
  trigger:
      - platform: time
        at: '05:00:00'
  condition:
      condition: time
      weekday:
          - mon
          - tue
          - thu
          - fri
  action:
      - service: climate.set_temperature
        data:
            entity_id: climate.anna
            temperature: 21

- id: thermostat_morning_hanswork_reset
  trigger:
      - platform: time
        at: '06:00:00'
  condition:
      condition: time
      weekday:
          - mon
          - tue
          - thu
          - fri
  action:
      - service: climate.set_temperature
        data:
            entity_id: climate.anna
            temperature: 18

- id: thermostat_morning_default
  trigger:
      - platform: time
        at: '08:45:00'
  action:
      - service: climate.set_temperature
        data:
            entity_id: climate.anna
            temperature: 21

- id: thermostat_evening
  trigger:
      - platform: time
        at: '23:30:00'
  action:
      - service: climate.set_temperature
        data:
            entity_id: climate.anna
            temperature: 18

- id: remote_channel_npo1
  trigger:
    - platform: mqtt
      topic: "home/command/tvdecoder/channel/npo1"
  action:
      - service: script.turn_on
        entity_id: script.tvdecoder_npo1
- id: remote_channel_npo2
  trigger:
    - platform: mqtt
      topic: "home/command/tvdecoder/channel/npo2"
  action:
      - service: script.turn_on
        entity_id: script.tvdecoder_npo2
- id: remote_channel_npo3
  trigger:
    - platform: mqtt
      topic: "home/command/tvdecoder/channel/npo3"
  action:
      - service: script.turn_on
        entity_id: script.tvdecoder_npo3
- id: remote_channel_een
  trigger:
    - platform: mqtt
      topic: "home/command/tvdecoder/channel/een"
  action:
      - service: script.turn_on
        entity_id: script.tvdecoder_een
- id: remote_channel_canvas
  trigger:
    - platform: mqtt
      topic: "home/command/tvdecoder/channel/canvas"
  action:
      - service: script.turn_on
        entity_id: script.tvdecoder_canvas
- id: remote_channel_bbc1st
  trigger:
    - platform: mqtt
      topic: "home/command/tvdecoder/channel/bbc1st"
  action:
      - service: script.turn_on
        entity_id: script.tvdecoder_bbc1st
- id: remote_channel_bbc1
  trigger:
    - platform: mqtt
      topic: "home/command/tvdecoder/channel/bbc1"
  action:
      - service: script.turn_on
        entity_id: script.tvdecoder_bbc1st
- id: remote_channel_bbc2
  trigger:
    - platform: mqtt
      topic: "home/command/tvdecoder/channel/bbc2"
  action:
      - service: script.turn_on
        entity_id: script.tvdecoder_bbc1st
- id: remote_channel_ard
  trigger:
    - platform: mqtt
      topic: "home/command/tvdecoder/channel/ard"
  action:
      - service: script.turn_on
        entity_id: script.tvdecoder_ard
- id: remote_channel_zdf
  trigger:
    - platform: mqtt
      topic: "home/command/tvdecoder/channel/zdf"
  action:
      - service: script.turn_on
        entity_id: script.tvdecoder_zdf
- id: remote_channel_wdr
  trigger:
    - platform: mqtt
      topic: "home/command/tvdecoder/channel/wdr"
  action:
      - service: script.turn_on
        entity_id: script.tvdecoder_zdf

- id: remote_trigger_alarm
  trigger:
     - platform: mqtt
       topic: "home/command/alarm/trigger"
     - platform: event
       event_type: zwave.scene_activated
       event_data:
         entity_id: zwave.remotec_zrc90
         scene_id: 4
         scene_data: 3 #0 = single press, 2 = continued press, 1 = release, 3 = double press
  action:
      - service: alarm_control_panel.alarm_trigger
        entity_id: alarm_control_panel.alarm_system

- id: remote_cancel_alarm
  trigger:
     - platform: mqtt
       topic: "home/command/alarm/cancel"
     - platform: event
       event_type: zwave.scene_activated
       event_data:
         entity_id: zwave.remotec_zrc90
         scene_id: 4
         scene_data: 2 #0 = single press, 2 = continued press, 1 = release, 3 = double press
  action:
      - service: alarm_control_panel.alarm_disarm
        entity_id: alarm_control_panel.alarm_system

- id: airco_living_on
  trigger:
      - platform: numeric_state
        entity_id: sensor.daikinap75591_inside_temperature
        above: 25
        for:
            minutes: 15
      - platform: state
        entity_id: binary_sensor.back_door
        from: "on"
        to: "off"
  condition:
      condition: and
      conditions:
       - condition: numeric_state
         entity_id: sensor.daikinap75591_inside_temperature
         above: 25
       - condition: state
         entity_id: climate.daikinap75591
         state: "off"
       - condition: state
         entity_id: binary_sensor.anybodyhome
         state: "on"
       - condition: state
         entity_id: binary_sensor.back_door
         state: "off"
  action:
      - service: climate.set_temperature
        data:
            entity_id: climate.daikinap75591
            hvac_mode: cool
            temperature: 23
            target_temp_high: 24
            target_temp_low: 22
      - service: climate.set_swing_mode
        data:
            entity_id: climate.daikinap75591
            swing_mode: Horizontal
      - service: climate.set_fan_mode
        data:
            entity_id: climate.daikinap75591
            swing_mode: Auto
      - service: climate.turn_on
        entity_id: climate.daikinap75591

- id: airco_living_on_refusal
  trigger:
      - platform: numeric_state
        entity_id: sensor.daikinap75591_inside_temperature
        above: 25
        for:
            minutes: 15
  condition:
      condition: and
      conditions:
       - condition: state
         entity_id: climate.daikinap75591
         state: "off"
       - condition: state
         entity_id: binary_sensor.anybodyhome
         state: "on"
       - condition: state
         entity_id: binary_sensor.back_door
         state: "on"
  action:
      - condition: time
        after: '09:00'
        before: '22:00'
      - service: mqtt.publish
        data:
            topic: "home/say/pi1"
            payload: "Please close the back door so air conditioning can be enabled"

- id: airco_living_off
  trigger:
      - platform: numeric_state
        entity_id: sensor.daikinap75591_inside_temperature
        below: 23
        for:
            minutes: 15
      - platform: state
        entity_id: binary_sensor.back_door
        to: 'on'
        for:
           minutes: 10
  condition:
      - condition: state
        entity_id: climate.daikinap75591
        state: "on"
  action:
      - service: climate.turn_off
        entity_id: climate.daikinap75591

- id: airco_living_silent
  trigger:
      platform: time
      at: '22:00:00'
  condition:
      - condition: state
        entity_id: climate.daikinap75591
        state: "on"
  action:
      - service: climate.set_fan_mode
        data:
            entity_id: climate.daikinap75591
            fan_mode: Silence

- id: airco_living_full
  trigger:
      platform: time
      at: '09:00:00'
  condition:
      - condition: state
        entity_id: climate.daikinap75591
        state: "on"
  action:
      - service: climate.set_fan_mode
        data:
            entity_id: climate.daikinap75591
            fan_mode: Auto

- id: airco_bedroom_on
  trigger:
      - platform: numeric_state
        entity_id: sensor.daikinap82317_inside_temperature
        above: 25
        for:
            minutes: 15
      - platform: state
        entity_id: binary_sensor.bedroom_window_left
        from: "on"
        to: "off"
      - platform: state
        entity_id: binary_sensor.bedroom_window_right
        from: "on"
        to: "off"
  condition:
      condition: and
      conditions:
       - condition: numeric_state
         entity_id: sensor.daikinap82317_inside_temperature
         above: 25
       - condition: state
         entity_id: climate.daikinap82317
         state: "off"
       - condition: state
         entity_id: binary_sensor.anybodyhome
         state: "on"
       - condition: state
         entity_id: binary_sensor.bedroom_window_left
         state: "off"
       - condition: state
         entity_id: binary_sensor.bedroom_window_right
         state: "off"
  action:
      - service: climate.set_temperature
        data:
            entity_id: climate.daikinap82317
            hvac_mode: cool
            temperature: 23
            target_temp_high: 24
            target_temp_low: 22
      - service: climate.set_swing_mode
        data:
            entity_id: climate.daikinap82317
            swing_mode: Off
      - service: climate.set_fan_mode
        data:
            entity_id: climate.daikinap82317
            fan_mode: Auto
      - service: climate.turn_on
        entity_id: climate.daikinap82317

- id: airco_bedroom_on_refusal
  trigger:
      - platform: numeric_state
        entity_id: sensor.daikinap82317_inside_temperature
        above: 25
        for:
            minutes: 15
  condition:
      condition: and
      conditions:
       - condition: state
         entity_id: climate.daikinap82317
         state: "off"
       - condition: state
         entity_id: binary_sensor.anybodyhome
         state: "on"
       - condition: or
         conditions:
           - condition: state
             entity_id: binary_sensor.bedroom_window_left
             state: "on"
           - condition: state
             entity_id: binary_sensor.bedroom_window_right
             state: "on"
  action:
      - condition: time
        after: '09:00'
        before: '22:00'
      - service: mqtt.publish
        data:
            topic: "home/say/pi1"
            payload: "Please close the windows upstairs so air conditioning can be enabled"

- id: airco_bedroom_off
  trigger:
      - platform: numeric_state
        entity_id: sensor.daikinap82317_inside_temperature
        below: 23
        for:
            minutes: 15
      - platform: state
        entity_id: binary_sensor.bedroom_window_left
        to: 'on'
        for:
           minutes: 10
      - platform: state
        entity_id: binary_sensor.bedroom_window_right
        to: 'on'
        for:
           minutes: 10
  condition:
      - condition: state
        entity_id: climate.daikinap82317
        state: "on"
  action:
      - service: climate.turn_off
        entity_id: climate.daikinap82317

- id: airco_bedroom_silent
  trigger:
      platform: time
      at: '22:00:00'
  condition:
     - condition: state
       entity_id: climate.daikinap82317
       state: "on"
  action:
      - service: climate.set_fan_mode
        data:
            entity_id: climate.daikinap82317
            fan_mode: Silence

- id: airco_bedroom_full
  trigger:
      platform: time
      at: '09:00:00'
  condition:
     - condition: state
       entity_id: climate.daikinap82317
       state: "on"
  action:
      - service: climate.set_fan_mode
        data:
            entity_id: climate.daikinap82317
            fan_mode: Auto

- alias: command_test_notification
  trigger:
      - platform: mqtt
        topic: home/command/test/notification
  action:
    - service: mqtt.publish
      data:
          topic: "home/notify/test"
          payload: "test"

- alias: request_status
  trigger:
      - platform: mqtt
        topic: home/command/status
  action:
    - service: script.send_status

- alias: auto_status
  trigger:
    - platform: time_pattern
      seconds: '/300' #every five minutes
    - platform: state
      entity_id: binary_sensor.front_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.back_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bedroom_window_left
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bedroom_window_right
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bathroom_window_sensor
      to: 'on'
    - platform: state
      entity_id: binary_sensor.anybodyhome
      to: 'on'
    - platform: state
      entity_id: device_tracker.proyphone
      to: 'home'
    - platform: state
      entity_id: device_tracker.pinephone
      to: 'home'
    - platform: state
      entity_id: device_tracker.hansphone
      to: 'home'
    - platform: state
      entity_id: binary_sensor.front_door
      to: 'off'
      for:
        seconds: 5
    - platform: state
      entity_id: binary_sensor.back_door
      to: 'off'
      for:
        seconds: 5
    - platform: state
      entity_id: binary_sensor.bedroom_window_left
      to: 'off'
    - platform: state
      entity_id: binary_sensor.bedroom_window_right
      to: 'off'
    - platform: state
      entity_id: binary_sensor.bathroom_window_sensor
      to: 'off'
    - platform: state
      entity_id: binary_sensor.anybodyhome
      to: 'off'
    - platform: state
      entity_id: device_tracker.proyphone
      to: 'not_home'
    - platform: state
      entity_id: device_tracker.pinephone
      to: 'not_home'
    - platform: state
      entity_id: device_tracker.hansphone
      to: 'not_home'
  action:
    - service: script.send_status
