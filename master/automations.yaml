#------------ Startup notification ------------------------
- alias: Startup
  hide_entity: True
  trigger:
      platform: homeassistant
      event: start
  action:
      - service: script.turn_on
        entity_id: script.hall_speaker_normal_volume
      - service: tts.picotts_say
        entity_id: media_player.hall_speaker
        data:
            message: Home automation started
      - service: shell_command.snapshot_clear_locks #clear all snapshot locks on startup
      - service: script.turn_on  #trigger RPi slaves to send their known statusses again
        data:
            entity_id: script.repoll_slaves
      - service: script.turn_on
        data:
            entity_id: script.reset_lights
      - service: script.turn_on
        data:
            entity_id: script.reset_fireplace
      - service: script.turn_on
        data:
            entity_id: script.reset_ipcam
      - service: notify.xmpp_proycon
        data:
            message: "Home automation started"


#------------ Snapshots ------------------------
- alias: Frontdoor snapshots
  hide_entity: False
  trigger:
    platform: time
    seconds: '/9' #every ten seconds
  action:
    - service: shell_command.snapshot_frontdoor
- alias: Hall upstairs snapshots
  hide_entity: False
  trigger:
    platform: time
    seconds: '/11' #every eleven seconds
  action:
    - service: shell_command.snapshot_hallupstairs
- alias: Living room snapshots
  hide_entity: False
  trigger:
    platform: time
    seconds: '/3' #every five seconds
  action:
    - service: shell_command.snapshot_livingroom
- alias: Street snapshots
  hide_entity: False
  trigger:
    platform: time
    seconds: '/3' #every three seconds
  action:
    - service: shell_command.snapshot_street
- alias: Garden snapshots
  hide_entity: False
  trigger:
    platform: time
    seconds: '/5' #every five seconds
  action:
    - service: shell_command.snapshot_garden
- alias: Daily snapshot archiving
  hide_entity: False
  trigger:
    platform: time
    at: "00:00:00"
  action:
    - service: shell_command.archive_snapshots
- alias: Door notification at night
  trigger:
      - platform: state
        entity_id: binary_sensor.front_door
        to: "on"
      - platform: state
        entity_id: binary_sensor.back_door
        to: "on"
  condition:
      - condition: time
        after: '23:00:00'
        before: '05:00:00'
      - condition: state
        entity_id: binary_sensor.anybodyhome
        state: "on"
  action:
      - service: tts.picotts_say
        entity_id: media_player.hall_speaker
        data:
            message: Door open
- id: lights_on_in_the_evening
  alias: Lights on in the evening
  trigger:
    - platform: sun
      event: sunset
      offset: '-00:45:00'
    - platform: numeric_state
      entity_id: sensor.fibaro_multisensor_luminance
      below: 29
  condition:
      condition: template
      value_template: '{% if states.automation.lights_on_in_the_evening.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.lights_on_in_the_evening.attributes.last_triggered)) > 36000 }} {% else %} true {% endif %}'
  action:
      service: script.turn_on
      entity_id: script.lights_on
- id: lights_on_when_dark_during_the_day
  alias: Lights on when dark during the day
  trigger:
    - platform: numeric_state
      entity_id: sensor.fibaro_multisensor_luminance
      below: 29
  condition:
    - condition: and
      conditions:
          - condition: template
            value_template: '{{ sensor.wake_up_relative_time > 0 }}'
          - condition: state
            entity_id: sun.sun
            state: "above_horizon"
          - condition: template
            value_template: '{% if states.automation.lights_on_in_the_evening.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.lights_on_in_the_evening.attributes.last_triggered)) > 36000 }} {% else %} true {% endif %}'
          - condition: state
            entity_id: switch.front_room
            state: "off"
          - condition: state
            entity_id: switch.midspots
            state: "off"
  action:
      service: script.turn_on
      entity_id: script.lights_on
- id: lights_off_when_light_during_the_day
  alias: Lights off when light during the day
  trigger:
    - platform: numeric_state
      entity_id: sensor.fibaro_multisensor_luminance
      above: 80
  condition:
    - condition: and
      conditions:
          - condition: template
            value_template: '{{ sensor.wake_up_relative_time > 0 }}'
          - condition: state
            entity_id: sun.sun
            state: "above_horizon"
          - condition: state
            entity_id: switch.kitchen
            state: "off"
          - condition: template
            value_template: '{% if states.automation.lights_on_when_dark_during_the_day.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.lights_on_when_dark_during_the_day.attributes.last_triggered)) < 21600 }} {% else %} true {% endif %}'
          - condition: state
            entity_id: switch.front_room
            state: "on"
          - condition: state
            entity_id: switch.midspots
            state: "on"
  action:
      service: script.turn_on
      entity_id: script.lights_on
- id: garden_lights_on_in_the_evening
  alias: Garden lights on in the evening
  trigger:
      platform: sun
      event: sunset
      offset: '01:00:00'
  action:
      service: switch.turn_on
      entity_id: group.garden_lights
- id: porch_light_on_at_night
  alias: Porch light on at night
  trigger:
      platform: sun
      event: sunset
      offset: '00:00:00'
  action:
      service: switch.turn_on
      entity_id: switch.porch
- id: porch_light_off_after_dawn
  alias: Porch light off after dawn
  trigger:
      platform: sun
      event: sunrise
      offset: '01:00:00'
  action:
      service: switch.turn_off
      entity_id: switch.porch
- id: lights_off_at_night
  alias: Lights off at night
  trigger:
      platform: time
      at: '01:00:00'
  action:
      - service: script.turn_on
        entity_id: script.lights_off
- id: doorbell
  alias: Doorbell
  trigger:
      platform: state
      entity_id: binary_sensor.doorbell
      from: "off"
      to: "on"
  condition:
      condition: template
      value_template: "{{ states('sensor.ir_send_activity') == 'unknown' }}"
  action:
      - service: script.turn_on
        entity_id: script.doorbell_sound
      - service: script.turn_off
        entity_id: script.reset_ipcam
      - service: input_select.select_option
        data:
          entity_id: input_select.ipcam_direction
          option: Front
      - service: notify.xmpp_proycon
        data_template:
          message: "The doorbell rang, there is somebody at the door ({{ now() }})"
      - service: notify.xmpp_hans
        data:
          message: "De deurbel gaat"
      - service: notify.mail_both
        data_template:
            title: "[homeautomation] Doorbell rang ({{ now() }})"
            message: "The doorbell rang; there is somebody at the door, please check"
      - service: persistent_notification.create
        data_template:
            message: "There is sometbody at the door ({{ now() }})"
            title: "The doorbell rang"
      - service: script.turn_on
        entity_id: script.flash_notification
      - service: script.turn_on
        entity_id: script.make_event_snapshots_front_door
      - service: script.turn_on
        entity_id: script.make_event_snapshots_street
      - service: script.turn_on
        entity_id: script.make_event_snapshots_living_room
      - delay:
          seconds: 10
      - service: script.turn_on
        data:
          entity_id: script.reset_ipcam
- id: ipcam_topreset
  alias: Camera to preset
  trigger:
      platform: state
      entity_id: input_select.ipcam_direction
  action:
      service: script.turn_on
      entity_id: script.ipcam_topreset
- id: alarm_trigger
  alias: Alarm trigger
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.back_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bedroom_window_left
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bedroom_window_right
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bathroom_window_sensor
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.alarm_system
      state: armed_away
  action:
    - service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.alarm_system
    - service: script.turn_on
      entity_id: script.alarm
    - service: script.turn_on
      entity_id: script.hall_speaker_full_volume
    - service: notify.xmpp_proycon
      data_template:
          message: "INTRUDER ALERT!! ALARM TRIGGERED AT ({{ now() }})!!! CHECK IMMEDIATELY!!!"
    - service: notify.xmpp_hans
      data_template:
          message: "INTRUDER ALERT!! ALARM TRIGGERED AT ({{ now() }})!!! CHECK IMMEDIATELY!!!"
    - service: notify.mail_both
      data_template:
          title: "[homeautomation] INTRUDER ALERT!! ALARM TRIGGERED AT ({{ now() }})!!! CHECK IMMEDIATELY!!!"
          message: "INTRUDER ALERT!! ALARM TRIGGERED AT ({{ now() }})!!! CHECK IMMEDIATELY!!!"
    - service: persistent_notification.create
      data_template:
        message: "ALARM TRIGGERED!!!"
        title: "INTRUDER ALTER!!! ALARM TRIGGERED AT ({{ now() }})!!! CHECK IMMEDIATELY!!!"
    - service: notify.sms
      data_template:
          message: "INTRUDER ALTER!!! ALARM TRIGGERED AT ({{ now() }})!!! CHECK IMMEDIATELY!!!"
          target:
              - !secret proyphone
              - !secret hansphone
    - service: script.turn_on
      entity_id: script.sirene_lights
    - service: switch.turn_on
      entity_id: switch.office
    - service: script.turn_on
      entity_id: script.make_event_snapshots_living_room
    - service: script.turn_on
      entity_id: script.make_event_snapshots_hall_upstairs
    - service: script.turn_on
      entity_id: script.make_event_snapshots_front_door
    - service: script.turn_on
      entity_id: script.make_event_snapshots_garden
    - service: script.turn_on
      entity_id: script.make_event_snapshots_street
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.tv_spots
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.front_room
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.back_room
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.midspots
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.back_corner
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.back_room
    - service: script.turn_on
      entity_id: script.alarm_blink
    - delay:
        seconds: 1
    - service: script.turn_on
      entity_id: switch.roof
    - delay:
        seconds: 1
    - service: script.turn_on
      entity_id: switch.porch
- id: arm_when_away
  alias: 'Arm when away'
  trigger:
    - platform: state
      entity_id: binary_sensor.anybodyhome
      from: 'on'
      to: 'off'
  action:
    - service: alarm_control_panel.alarm_arm_away
      entity_id: alarm_control_panel.alarm_system
    - service: tts.picotts_say
      entity_id: media_player.hall_speaker
      data:
          message: System armed
    - service: notify.xmpp_proycon
      data:
          message: "System armed"
    - service: notify.xmpp_hans
      data:
          message: "System armed"
- id: disarm_when_home
  alias: 'Disarm when home'
  trigger:
    - platform: state
      entity_id: binary_sensor.anybodyhome
      from: 'off'
      to: 'on'
  action:
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.alarm_system
    - service: notify.xmpp_proycon
      data:
          message: "System disarmed"
    - service: notify.xmpp_hans
      data:
          message: "System disarmed"
    - service: switch.turn_on
      entity_id: switch.porch
    - service: script.turn_on
      entity_id: script.green_lights
    - delay:
        seconds: 1
    - service: switch.turn_on
      entity_id: switch.hall
    - delay:
        seconds: 1
    - service: script.turn_on
      entity_id: script.flash_notification
- id: front_door_still_open
  alias: "Front door still open"
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      to: 'on'
      for:
          seconds: 30
  action:
    - service: tts.picotts_say
      entity_id: media_player.hall_speaker
      data:
          message: Front door still open
- id: back_door_still_open
  alias: "Back door still open"
  trigger:
    - platform: state
      entity_id: binary_sensor.back_door
      to: 'on'
      for:
          seconds: 30
  action:
    - service: tts.picotts_say
      entity_id: media_player.hall_speaker
      data:
          message: Back door still open


- id: front_door_opened
  alias: "Front door opened"
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'off'
      to: 'on'
  action:
    - service: script.turn_off
      entity_id: script.reset_ipcam
    - service: switch.turn_on
      entity_id: switch.hall
    - service: input_select.select_option
      data:
          entity_id: input_select.ipcam_direction
          option: Hall
    - service: script.turn_off
      entity_id: script.green_lights
    - service: script.turn_off
      entity_id: script.flash_notification
    - service: script.turn_on
      entity_id: script.make_event_snapshots_front_door
    - service: script.turn_on
      entity_id: script.make_event_snapshots_street
    - delay:
        seconds: 2
    - service: script.turn_on
      entity_id: script.flash_reset
    - delay:
        seconds: 6
    - service: script.turn_on
      entity_id: script.reset_ipcam
    - service: script.turn_on
      entity_id: script.reset_fireplace
- id: hall_light_off
  alias: "Hall light off"
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'on'
      to: 'off'
      for:
          minutes: 5
  action:
    - service: switch.turn_off
      entity_id: switch.hall
- id: back_door_opened
  alias: "back door opened"
  trigger:
    - platform: state
      entity_id: binary_sensor.back_door
      from: 'off'
      to: 'on'
  action:
    - service: script.turn_off
      entity_id: script.reset_ipcam
    - service: input_select.select_option
      data:
          entity_id: input_select.ipcam_direction
          option: Back
    - service: script.turn_off
      entity_id: script.flash_notification
    - service: script.turn_on
      entity_id: script.make_event_snapshots_living_room
    - service: script.turn_on
      entity_id: script.make_event_snapshots_garden
    - delay:
        seconds: 2
    - service: script.turn_on
      entity_id: script.flash_reset
    - delay:
        seconds: 8
    - service: script.turn_on
      entity_id: script.reset_ipcam
    - service: script.turn_on
      entity_id: script.reset_fireplace
- id: window_upstairs_opened
  alias: "Window upstairs opened"
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_window_left
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bedroom_window_right
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.bathroom_window_sensor
      from: 'off'
      to: 'on'
  action:
    - service: script.turn_off
      entity_id: script.reset_ipcam
    - service: input_select.select_option
      data:
          entity_id: input_select.ipcam_direction
          option: Hall
    - delay:
        seconds: 10
    - service: script.turn_on
      entity_id: script.reset_ipcam
- id: home_greeting
  alias: "Home Greeting"
  trigger: #when doors close on reentry
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'off'
      to: 'off'
    - platform: state
      entity_id: binary_sensor.back_door
      from: 'on'
      to: 'off'
  condition: #and we were not home
    - condition: state
      entity_id: input_boolean.inside_house
      state: "off"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.inside_house
    - delay:
        seconds: 3
    - service: tts.picotts_say
      entity_id: media_player.hall_speaker
      data_template:
        message: Welcome home
- id: home_greeting_proycon
  alias: "Home Greeting proycon"
  trigger: #when doors close on reentry
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: binary_sensor.back_door
      from: 'on'
      to: 'off'
  condition: #and we were not home
    - condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.proycon_inside_house
          state: "off"
        - condition: state
          entity_id: input_boolean.inside_house
          state: "on"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.proycon_inside_house
    - delay:
        seconds: 3
    - service: tts.picotts_say
      entity_id: media_player.hall_speaker
      data:
        message: Hello Martin
- id: home_greeting_hans
  alias: "Home Greeting Hans"
  trigger: #when doors close on reentry
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: binary_sensor.back_door
      from: 'on'
      to: 'off'
  condition: #and we were not home
    - condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.hans_inside_house
          state: "off"
        - condition: state
          entity_id: input_boolean.inside_house
          state: "on"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.hans_inside_house
    - delay:
        seconds: 3
    - service: tts.picotts_say
      entity_id: media_player.hall_speaker
      data:
        message: Hello Hans
- id: proycon_left_house
  alias: Proycon Left House
  trigger:
    - platform: state
      entity_id: device_tracker.proyphone
      from: 'home'
      to: 'not_home'
      for:
          minutes: 10
  action:
     - service: input_boolean.turn_off
       entity_id: input_boolean.proycon_inside_house
- id: hans_left_house
  alias: Hans Left House
  trigger:
    - platform: state
      entity_id: device_tracker.hansphone
      from: 'home'
      to: 'not_home'
      for:
          minutes: 10
  action:
     - service: input_boolean.turn_off
       entity_id: input_boolean.hans_inside_house
- id: both_left_house
  alias: Both Left House
  trigger:
    - platform: state
      entity_id: input_boolean.proycon_inside_house
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: input_boolean.hans_inside_house
      from: 'on'
      to: 'off'
  condition:
    - condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.proycon_inside_house
          state: "off"
        - condition: state
          entity_id: input_boolean.hans_inside_house
          state: "off"
  action:
     - service: input_boolean.turn_off
       entity_id: input_boolean.inside_house
- id: morning_lights_on_hans
  alias: Morning Lights on Hans
  trigger:
      - platform: time
        at: '05:15:00'
  condition:
      condition: time
      weekday:
          - mon
          - tue
          - thu
          - fri
  action:
       - service: switch.turn_on
         entity_id: switch.tv_spots
- id: morning_lights_off_hans
  alias: Morning Lights off Hans
  trigger:
      - platform: time
        at: '06:15:00'
  condition:
      condition: time
      weekday:
          - mon
          - tue
          - thu
          - fri
  action:
       - service: switch.turn_off
         entity_id: switch.tv_spots
- id: ignite_fireplace_in_evening
  alias: Ignite fireplace in evening
  trigger:
     platform: sun
     event: sunset
     offset: '1:00:00'
  condition:
     - condition: state
       entity_id: binary_sensor.anybodyhome
       state: "on"
  action:
     - service: input_select.select_option
       data:
           entity_id: input_select.fireplace
           option: Fire
     - service: input_slider.select_value
       data:
           entity_id: input_slider.fireplace_brightness
           option: 255
     - service: input_slider.select_value
       data:
           entity_id: input_slider.dresser_ambilight_brightness
           option: 40
     - service: input_select.select_option
       data:
           entity_id: input_select.dresser_ambilight
           option: Lamp
     - delay:
           seconds: 1
     - service: script.turn_on
       entity_id: script.ignite_fireplace
     - service: script.turn_on
       entity_id: script.ignite_dresser_ambilight

- id: alarm_cancelled
  alias: Alarm Cancelled
  trigger:
    - platform: state
      entity_id: alarm_control_panel.alarm_system
      from: 'triggered'
      to: 'disarmed'
  action:
      - service: script.turn_off
        entity_id: script.alarm
      - service: script.turn_off
        entity_id: script.alarm_blink
      - service: script.turn_off
        entity_id: script.sirene_lights
      - service: script.turn_on
        data:
            entity_id: script.reset_ipcam
      - service: script.turn_on
        data:
            entity_id: script.reset_fireplace
      - service: script.turn_on
        data:
            entity_id: script.reset_lights

- id: kitchen_light_on_motion
  alias: Kitchen Light On Motion
  trigger:
      platform: state
      entity_id: binary_sensor.pir_kitchen
      from: "off"
      to: "on"
  condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.anybodyhome
          state: "on"
        - condition: numeric_state
          entity_id: sensor.fibaro_multisensor_luminance
          below: 40
  action:
      - service: switch.turn_on
        entity_id: switch.kitchen

- id: kitchen_light_off
  alias: Kitchen Light Off
  trigger:
      platform: state
      entity_id: binary_sensor.pir_kitchen
      from: "on"
      to: "off"
      for:
          minutes: 5
  action:
      - service: switch.turn_off
        entity_id: switch.kitchen


- id: wake_up
  alias: 'Wake up'
  trigger:
    platform: template
    value_template: '{{ states.sensor.time.state == states.sensor.wake_up_time.state }}'
  action:
    - service: script.turn_on
      entity_id: script.wake_up_alarm
    - service: media_player.play_media
      data:
          entity_id: media_player.hall_speaker
          media_content_id: /home/homeautomation/homeassistant/media/morningbell.ogg
          media_content_type: 'music'
    - delay:
        seconds: 120
    - service: tts.picotts_say
      entity_id: media_player.hall_speaker
      data:
          message: Good morning

- alias: Streetcam Reset
  trigger:
    platform: time
    minutes: "/10"
    seconds: 00
  action:
    - service: shell_command.streetcam_reset_1
    - delay:
        seconds: 10
    - service: shell_command.streetcam_reset_2

- alias: Z-Wave network is ready
  trigger:
    platform: event
    event_type: zwave.network_ready
  action:
      - service: tts.picotts_say
        entity_id: media_player.hall_speaker
        data:
            message: Zed Wave network ready

- alias: Bathroom Vent On
  trigger:
    platform: state
    entity_id: binary_sensor.bathroom_too_humid
    from: "off"
    to: "on"
    for:
       minutes: 20
  condition:
      condition: and
      conditions:
        - condition: time
          after: '10:00'
          before: '23:00'
        - condition: state
          entity_id: switch.bathroom_vent
          state: "off"
  action:
      - service: switch.turn_on
        entity_id: switch.bathroom_vent

- alias: Bathroom Vent Off
  trigger:
    platform: numeric_state
    entity_id: sensor.bathroom_sensor_relative_humidity
    below: 70
  condition:
    - condition: state
      entity_id: switch.bathroom_vent
      state: "on"
  action:
      - service: switch.turn_off
        entity_id: switch.bathroom_vent

- alias: Bathroom Vent Off After a While
  trigger:
    platform: state
    entity_id: switch.bathroom_vent
    from: "off"
    to: "on"
    for:
        minutes: 30
  action:
      - service: switch.turn_off
        entity_id: switch.bathroom_vent

- alias: Night light on motion
  trigger:
      platform: state
      entity_id: binary_sensor.pir_living_room
      from: "off"
      to: "on"
  condition:
      condition: and
      conditions:
        - condition: time
          after: '22:00'
          before: '09:00'
        - condition: state
          entity_id: binary_sensor.anybodyhome
          state: "on"
        - condition: state
          entity_id: switch.tv_spots
          state: "off"
        - condition: state
          entity_id: switch.front_room
          state: "off"
        - condition: state
          entity_id: switch.back_room
          state: "off"
        - condition: state
          entity_id: switch.back_corner
          state: "off"
        - condition: state
          entity_id: switch.midspots
          state: "off"
  action:
     - service: input_slider.select_value
       data:
           entity_id: input_slider.dresser_ambilight_brightness
           option: 20
     - service: input_select.select_option
       data:
           entity_id: input_select.dresser_ambilight
           option: Red
     - delay:
           seconds: 1
     - service: script.turn_on
       entity_id: script.ignite_dresser_ambilight

- alias: Night light off
  trigger:
      platform: state
      entity_id: binary_sensor.pir_living_room
      from: "on"
      to: "off"
      for:
          minutes: 5
  condition:
      condition: template
      value_template: '{% if states.automation.night_light_on_motion.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.night_light_on_motion.attributes.last_triggered)) < 400 }} {% else %} false {% endif %}'
  action:
     - service: script.turn_on
       entity_id: script.extinguish_dresser_ambilight

- alias: SoftRemote Volume up
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.nodon_soft_remote
      scene_id: 20 #Plus button (10: closed circle, 20: plus, 30: open circle, 40: minus)
  condition:
      - condition: state
        entity_id: media_player.yamaha_receiver
        state: "on"
  action:
      - service: script.turn_on
        entity_id: script.avr_voldup

- alias: SoftRemote Volume down
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.nodon_soft_remote
      scene_id: 40 #Minus button (10: closed circle, 20: plus, 30: open circle, 40: minus)
  condition:
      - condition: state
        entity_id: media_player.yamaha_receiver
        state: "on"
  action:
      - service: script.turn_on
        entity_id: script.avr_voldown




