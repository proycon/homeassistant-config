repoll_slaves:
    alias: Repoll slaves
    sequence:
      - service: mqtt.publish #trigger RPi slaves to send their known statusses again
        data:
            topic: "home/poll"
            payload: "ON"
reset_lights:
    alias: Reset Lights
    sequence:
        - service_template: "switch.turn_{% if is_state('sun.sun','below_horizon') %}on{% else %}off{% endif %}"
          data:
              entity_id:
                - group.living_lights
                - group.garden_lights
                - switch.office
        - service: switch.turn_off
          data:
              entity_id:
                - group.guard_lights
                - switch.bedroom
lights_on:
    alias: Lights on
    sequence:
        - service: switch.turn_on
          entity_id: switch.tv_spots
        - wait_template: "{{ states('switch.tv_spots') == 'on' }}"
        - service: switch.turn_on
          entity_id: switch.back_corner
        - wait_template: "{{ states('switch.back_corner') == 'on' }}"
        - service: switch.turn_on
          entity_id: switch.back_room
        - wait_template: "{{ states('switch.back_room') == 'on' }}"
        - service: switch.turn_on
          entity_id: switch.front_room
        - wait_template: "{{ states('switch.front_room') == 'on' }}"
        - service: switch.turn_on
          entity_id: switch.midspots
lights_off:
    alias: Lights off
    sequence:
        - service: switch.turn_off
          entity_id: switch.back_corner
        - wait_template: "{{ states('switch.back_corner') == 'off' }}"
        - service: switch.turn_off
          entity_id: switch.back_room
        - wait_template: "{{ states('switch.back_room') == 'off' }}"
        - service: switch.turn_off
          entity_id: switch.front_room
        - wait_template: "{{ states('switch.front_room') == 'off' }}"
        - service: switch.turn_off
          entity_id: switch.midspots
        - wait_template: "{{ states('switch.midspots') == 'off' }}"
        - service: switch.turn_off
          entity_id: switch.garden
        - wait_template: "{{ states('switch.garden') == 'off' }}"
        - service: switch.turn_off
          entity_id: switch.balcony
        - wait_template: "{{ states('switch.balcony') == 'off' }}"
        - service: switch.turn_off
          entity_id: switch.roof
        - wait_template: "{{ states('switch.roof') == 'off' }}"
        - service: switch.turn_off
          entity_id: switch.tv_spots
        - wait_template: "{{ states('switch.tv_spots') == 'off' }}"
        - service: switch.turn_off
          entity_id: switch.kitchen
        - wait_template: "{{ states('switch.kitchen') == 'off' }}"
        - service: switch.turn_off
          entity_id: switch.office
        - wait_template: "{{ states('switch.office') == 'off' }}"
        - service: switch.turn_off
          entity_id: switch.hall
        - wait_template: "{{ states('switch.hall') == 'off' }}"
        - service: script.turn_on
          entity_id: script.extinguish_fireplace
        - service: script.turn_on
          entity_id: script.extinguish_dresser_ambilight
avr_volup:
    alias: Volume up (AVR)
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"avr","key":"KEY_VOLUMEUP"}'
avr_voldown:
    alias: Volume down (AVR)
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"avr","key":"KEY_VOLUMEDOWN"}'
avr_mute:
    alias: Mute (AVR)
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"avr","key":"KEY_MUTE"}'
avr_power:
    alias: Power (AVR) #replace with switch?
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"avr","key":"KEY_POWER"}'
tvdecoder_channelup:
    alias: Channel up
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"CHANNEL_UP"}'
tvdecoder_channeldown:
    alias: Channel down
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"CHANNEL_DOWN"}'
tvdecoder_playpause:
    alias: Play/pause Toggle
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"PLAY_PAUSE"}'
tvdecoder_ok:
    alias: OK
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"OK"}'
tvdecoder_back:
    alias: Back
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"BACK"}'
tvdecoder_down:
    alias: Down
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"down"}'
tvdecoder_up:
    alias: Up
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"UP"}'
tvdecoder_left:
    alias: left
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"LEFT"}'
tvdecoder_right:
    alias: right
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"RIGHT"}'
tvdecoder_1:
    alias: 1
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_1"}'
tvdecoder_2:
    alias: 2
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
tvdecoder_3:
    alias: 3
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_3"}'
tvdecoder_4:
    alias: 4
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_1"}'
tvdecoder_5:
    alias: 5
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_5"}'
tvdecoder_6:
    alias: 6
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
tvdecoder_7:
    alias: 7
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_7"}'
tvdecoder_8:
    alias: 8
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_8"}'
tvdecoder_9:
    alias: 9
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
tvdecoder_0:
    alias: 0
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_0"}'
tvdecoder_npo1:
    alias: TV Channel - NPO1
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
      - delay:
          milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
      - delay:
          milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_1"}'
tvdecoder_npo2:
    alias: TV Channel - NPO2
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
      - delay:
          milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
      - delay:
          milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
tvdecoder_npo3:
    alias: TV Channel - NPO3
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
      - delay:
          milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
      - delay:
          milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_3"}'
tvdecoder_rtl4:
    alias: TV Channel - RTL4
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
tvdecoder_veronica:
    alias: TV Channel - Veronica
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
tvdecoder_een:
    alias: TV Channel - Één
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_7"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_1"}'
tvdecoder_canvas:
    alias: TV Channel - Canvas
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_7"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
tvdecoder_bbc1st:
    alias: TV Channel - BBC First
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_7"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
tvdecoder_bbc1:
    alias: TV Channel - BBC One
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_7"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_3"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_0"}'
tvdecoder_bbc2:
    alias: TV Channel - BBC Two
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_7"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_3"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_1"}'
tvdecoder_ard:
    alias: TV Channel - ARD
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
tvdecoder_zdf:
    alias: TV Channel - ZDF
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_5"}'
tvdecoder_wdr:
    alias: TV Channel - WDR
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_8"}'
tvdecoder_arte:
    alias: TV Channel - Arte
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_4"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
tvdecoder_tv5monde:
    alias: TV Channel - TV 5 Monde
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_2"}'
tvdecoder_rai1:
    alias: TV Channel - Rai 1
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_9"}'
      - delay:
            milliseconds: 400
      - service: mqtt.publish
        data:
            topic: "home/ir_send/pi1"
            payload: '{"device":"VIP1853","key":"KEY_6"}'
      - delay:
            milliseconds: 400
doorbell_sound:
    alias: Doorbell sound
    sequence:
        - service: media_player.play_media
          data:
              entity_id: media_player.hall_speaker
              media_content_id: /home/homeautomation/homeassistant/media/doorbell.ogg
              media_content_type: 'music'
dog_sound:
    alias: Dog sound
    sequence:
        - service: media_player.play_media
          data:
              entity_id: media_player.hall_speaker
              media_content_id: /home/homeautomation/homeassistant/media/dog.wav
              media_content_type: 'music'
chime_sound:
    alias: Chime sound
    sequence:
        - service: media_player.play_media
          data:
              entity_id: media_player.hall_speaker
              media_content_id: /home/homeautomation/homeassistant/media/chime.wav
              media_content_type: 'music'
timer:
    alias: Timer
    sequence:
        - delay: "00:{{ states.input_slider.timer.state }}:00"
        - service: media_player.play_media
          data:
              entity_id: media_player.hall_speaker
              media_content_id: /home/homeautomation/homeassistant/media/meditationend.off
              media_content_type: 'music'

hall_speaker_normal_volume:
    alias: Hall speaker Normal Volume
    sequence:
        - service: shell_command.hallspeaker_normalvolume

hall_speaker_full_volume:
    alias: Hall speaker Full Volume
    sequence:
        - service: shell_command.hallspeaker_fullvolume

trigger_alarm_manually:
    alias: Trigger Alarm Manually
    sequence:
        - service: alarm_control_panel.alarm_trigger
          entity_id: alarm_control_panel.alarm_system

alarm:
    alias: Alarm
    sequence:
        - service: script.turn_on #loop
          entity_id: script.alarm_iteration
alarm_iteration:
    alias: Alarm Iteration
    sequence:
        - service: media_player.play_media
          data:
              entity_id: media_player.hall_speaker
              media_content_id: /home/homeautomation/homeassistant/media/alarm.ogg
              media_content_type: 'music'
        - condition: state
          entity_id: alarm_control_panel.alarm_system
          state: 'triggered'
        - service: script.turn_on #loop
          entity_id: script.alarm

ipcam_topreset:
    alias: Camera to preset
    sequence:
        - service: rest_command.ipcam_topreset
          data_template:
              ip: !secret ipcam_ip
              index: '{% if is_state("input_select.ipcam_direction","Hall") %}0{% elif is_state("input_select.ipcam_direction","Dresser") %}1{% elif is_state("input_select.ipcam_direction","Back") %}2{% elif is_state("input_select.ipcam_direction","TV") %}3{% elif is_state("input_select.ipcam_direction","Couch") %}4{% elif is_state("input_select.ipcam_direction","Front") %}5{% endif %}'
ignite_fireplace:
    alias: Ignite Fireplace
    sequence:
      - service: mqtt.publish
        data_template:
            topic: "home/technofire/pi3/set"
            payload_template: '{"scene":"{{ states.input_select.fireplace.state.replace(" ","_") |lower }}","brightness":"{{ states.input_slider.fireplace_brightness.state|int }}"}'
extinguish_fireplace:
    alias: Extinguish Fireplace
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/technofire/pi3/set"
            payload: '{"scene":"off","brightness":"0"}'
ignite_dresser_ambilight:
    alias: Ignite dresser ambilight
    sequence:
      - service: mqtt.publish
        data_template:
            topic: "home/technofire/pi2/set"
            payload_template: '{"scene":"{{ states.input_select.dresser_ambilight.state.replace(" ","_") |lower }}","brightness":"{{ states.input_slider.dresser_ambilight_brightness.state|int }}"}'
extinguish_dresser_ambilight:
    alias: Extinguish dresser ambilight
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/technofire/pi2/set"
            payload: '{"scene":"off","brightness":"0"}'
reset_ipcam:
    alias: Reset IPcam
    sequence:
      - delay: #starts with a long delay, returns to starting position after a while
            seconds: 300
      - service: input_select.select_option
        data:
          entity_id: input_select.ipcam_direction
          option: Back
flash_notification:
    alias: Flash notification
    sequence:
        - service: switch.turn_on
          entity_id: switch.porch
        - delay:
            seconds: 3
        - service: switch.turn_on
          entity_id: switch.back_room
        - delay:
            seconds: 3
        - service: switch.turn_off
          entity_id: switch.porch
        - delay:
            seconds: 3
        - service: switch.turn_off
          entity_id: switch.back_room
        - delay:
            seconds: 3
        - service: switch.turn_on
          entity_id: switch.porch
        - delay:
            seconds: 3
        - service: switch.turn_on
          entity_id: switch.back_room
        - delay:
            seconds: 3
        - service: switch.turn_off
          entity_id: switch.porch
        - delay:
            seconds: 3
        - service: switch.turn_off
          entity_id: switch.back_room
        - service: switch.turn_on
          entity_id: switch.porch
        - delay:
            seconds: 3
        - service: switch.turn_on
          entity_id: switch.back_room
        - delay:
            seconds: 3
        - service: switch.turn_off
          entity_id: switch.porch
        - delay:
            seconds: 3
        - service: switch.turn_off
          entity_id: switch.back_room
guard_light_reset:
    alias: guard light reset
    sequence:
        - service_template: "switch.turn_{% if is_state('sun.sun','below_horizon') %}on{% else %}off{% endif %}"
          data:
              entity_id:
                - switch.porch
        - delay:
            seconds: 2
        - service_template: "switch.turn_{% if is_state('sun.sun','below_horizon') and (states.sensor.time.state[:2]|int < 2 or states.sensor.time.state[:2]|int > 6) %}on{% else %}off{% endif %}"
          data:
              entity_id:
                - switch.garden
watch_tv:
    alias: Watch TV
    sequence:
        - service: switch.turn_on
          entity_id: switch.tv
        - service: media_player.turn_on
          entity_id: media_player.yamaha_receiver
        - service: switch.turn_on
          entity_id: switch.tv_decoder
        - delay:
            seconds: 1
        - service: media_player.select_source
          entity_id: media_player.yamaha_receiver
          data:
              source: HDMI1

listen_to_music:
    alias: Listen to Music
    sequence:
        - service: switch.turn_on
          entity_id: switch.tv
        - service: media_player.turn_on
          entity_id: media_player.yamaha_receiver
        - service: switch.turn_off
          entity_id: switch.pi1_xorg
        - service: switch.turn_off
          entity_id: switch.pi1_kodi
        - delay:
            seconds: 1
        - service: switch.turn_on
          entity_id: switch.pi1_music_player
        - service: media_player.select_source
          entity_id: media_player.yamaha_receiver
          data:
              source: HDMI2
        - service: media_player.play_media
          data:
              entity_id: media_player.mpd


media_centre:
    alias: Media Centre
    sequence:
        - service: switch.turn_on
          entity_id: switch.tv
        - service: media_player.turn_on
          entity_id: media_player.yamaha_receiver
        - service: switch.turn_off
          entity_id: switch.pi1_xorg
        - delay:
            seconds: 1
        - service: media_player.select_source
          entity_id: media_player.yamaha_receiver
          data:
              source: HDMI2
        - condition: state
          entity_id: switch.pi1_kodi
          state: 'off'
        - service: switch.turn_on
          entity_id: switch.pi1_kodi

desktop:
    alias: Desktop
    sequence:
        - service: switch.turn_on
          entity_id: switch.tv
        - service: media_player.turn_on
          entity_id: media_player.yamaha_receiver
        - service: switch.turn_off
          entity_id: switch.pi1_kodi
        - delay:
            seconds: 1
        - service: media_player.select_source
          entity_id: media_player.yamaha_receiver
          data:
              source: HDMI2
        - condition: state
          entity_id: switch.pi1_xorg
          state: 'off'
        - service: switch.turn_on
          entity_id: switch.pi1_xorg

turn_media_off:
    alias: Turn media off
    sequence:
    - service: switch.turn_off
      entity_id: switch.tv
    - service: media_player.turn_off
      entity_id: media_player.yamaha_receiver
    - service: switch.turn_off
      entity_id: switch.tv_decoder
    - service: switch.turn_off
      entity_id: switch.pi1_xorg
    - service: switch.turn_off
      entity_id: switch.pi1_kodi
    - service: switch.turn_off
      entity_id: switch.pi1_music_player

update_kodi_library:
    alias: Update Kodi Library
    sequence:
      - alias: Call Kodi update
        service: media_player.kodi_call_method
        data:
          entity_id: media_player.kodi
          method: VideoLibrary.Scan

red_alert_lights:
     alias: Red Alert Lights
     sequence:
         - service: input_select.select_option
           data:
               entity_id: input_select.fireplace
               option: Red
         - service: input_slider.select_value
           data:
               entity_id: input_slider.fireplace_brightness
               value: 255
         - service: input_slider.select_value
           data:
               entity_id: input_slider.dresser_ambilight_brightness
               value: 255
         - service: input_select.select_option
           data:
               entity_id: input_select.dresser_ambilight
               option: Red
         - delay:
               seconds: 1
         - service: script.turn_on
           entity_id: script.ignite_fireplace
         - service: script.turn_on
           entity_id: script.ignite_dresser_ambilight

green_lights:
     alias: Green Lights
     sequence:
         - service: input_select.select_option
           data:
               entity_id: input_select.fireplace
               option: Green
         - service: input_slider.select_value
           data:
               entity_id: input_slider.fireplace_brightness
               value: 255
         - service: input_slider.select_value
           data:
               entity_id: input_slider.dresser_ambilight_brightness
               value: 255
         - service: input_select.select_option
           data:
               entity_id: input_select.dresser_ambilight
               option: Green
         - delay:
               seconds: 1
         - service: script.turn_on
           entity_id: script.ignite_fireplace
         - service: script.turn_on
           entity_id: script.ignite_dresser_ambilight
         - delay:
                minutes: 5
         - service: script.turn_on
           entity_id: script.reset_fireplace


sirene_lights:
     alias: Sirene lights
     sequence:
         - service: input_select.select_option
           data:
               entity_id: input_select.fireplace
               option: Sirene
         - service: input_slider.select_value
           data:
               entity_id: input_slider.fireplace_brightness
               value: 255
         - service: input_slider.select_value
           data:
               entity_id: input_slider.dresser_ambilight_brightness
               value: 255
         - service: input_select.select_option
           data:
               entity_id: input_select.dresser_ambilight
               option: Sirene
         - delay:
               seconds: 1
         - service: script.turn_on
           entity_id: script.ignite_fireplace
         - service: script.turn_on
           entity_id: script.ignite_dresser_ambilight

reset_fireplace:
     alias: Reset Fireplace
     sequence:
     - service: input_select.select_option
       data:
           entity_id: input_select.fireplace
           option: Fire
     - service: input_slider.select_value
       data:
           entity_id: input_slider.fireplace_brightness
           value: 255
     - service: input_slider.select_value
       data:
           entity_id: input_slider.dresser_ambilight_brightness
           value: 40
     - service: input_select.select_option
       data:
           entity_id: input_select.dresser_ambilight
           option: Lamp
     - delay:
           seconds: 1
     - service: script.turn_on
       data_template:
           entity_id: "script.{% if is_state('sun.sun','below_horizon') %}ignite{% else %}extinguish{% endif %}_fireplace"
     - service: script.turn_on
       data_template:
           entity_id: "script.{% if is_state('sun.sun','below_horizon') %}ignite{% else %}extinguish{% endif %}_dresser_ambilight"



wake_up_alarm:
    alias: Wake up alarm
    sequence:
        - service: switch.turn_on
          entity_id: switch.bedroom
        - delay:
            seconds: 30
        - service: script.turn_on
          entity_id: script.turn_tv_upstairs_on
        - service: mqtt.publish
          data:
              topic: "home/wakeup/pi2"
              payload: "on"
        - delay:
            minutes: 45
        - service: switch.turn_off
          entity_id: switch.bedroom
        - service: mqtt.publish
          data:
              topic: "home/xorg/set/pi2"
              payload: "off"


turn_tv_upstairs_on:
    alias: Turn TV upstairs on
    sequence:
      - service: mqtt.publish
        data:
            topic: "home/hdmi_cec_send/pi2"
            payload: "on 0"


make_event_snapshots_living_room:
    alias: Make Event Snapshots Living Room
    sequence:
        - service: shell_command.event_snapshots
          data:
              cams: "livingroom"
make_event_snapshots_street:
    alias: Make Event Snapshots Street
    sequence:
        - service: shell_command.event_snapshots
          data:
              cams: "street"
make_event_snapshots_garden:
    alias: Make Event Snapshots garden
    sequence:
        - service: shell_command.event_snapshots
          data:
              cams: "garden"
make_event_snapshots_front_door:
    alias: Make Event Snapshots front_door
    sequence:
        - service: shell_command.event_snapshots
          data:
              cams: "frontdoor"
make_event_snapshots_hall_upstairs:
    alias: Make Event Snapshots hall_upstairs
    sequence:
        - service: shell_command.event_snapshots
          data:
              cams: "hallupstairs"
make_event_snapshots_all:
    alias: Make Event Snapshots all
    sequence:
        - service: shell_command.event_snapshots
          data:
             cams: "street livingroom garden hallupstairs frontdoor"

play_youtube_playlist:
    alias: Play YouTube
    sequence:
    - service: script.turn_on
      entity_id: script.media_centre
    - wait_template: "{{ states.switch.pi1_kodi.state == 'on' }}"
    - delay:
        seconds: 4
    - service: media_player.play_media
      entity_id: media_player.kodi
      data_template:
        media_content_id: !secret youtube_play_playlist
        media_content_type: 'video'

mail_test:
    alias: Mail test
    sequence:
      - service: notify.mail_both
        data_template:
            title: "[homeautomation] Test"
            message: "Test, just ignore"
