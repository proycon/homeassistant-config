homeassistant:
  # Name of the location where Home Assistant is running
  name: Pi2
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Amsterdam

rflink:
    port: /dev/serial/by-id/usb-Arduino__www.arduino.cc__0042_95635333431351010291-if00
    wait_for_ack: False
    reconnect_interval: 10

logger:
  default: error
  logs:
    rflink: debug
    homeassistant.components.rflink: debug


http:
  # Uncomment this to add a password (recommended!)
  #api_password: !secret api_password
  # use_x_forwarded_for: True
  # Uncomment this if you are using SSL or running in Docker etc
  # base_url: example.duckdns.org:8123

config:

frontend:

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
#updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
#conversation:

# Enables support for tracking state changes over time.
#history:

# View all events in a logbook
#logbook:

# Track the sun
#sun:

# Weather Prediction
#sensor:
#  platform: yr
sensor:
    - platform: rflink
      automatic_add: true
      devices:
          alecto_1300_air_5a81_temp:
              sensor_type: temperature
          alecto_1300_soil_5a82_hum:
              sensor_type: humidity
          alecto_1300_soil_5a82_temp:
              sensor_type: temperature
          alectov1_008f_raintot:
              sensor_type: total_rain
          alectov1_0128_hum:
              sensor_type: humidity
          alectov1_0128_temp:
              sensor_type: temperature
          alectov1_0128_windir:
              sensor_type: winddirection
          alectov1_0128_winsp:
              sensor_type: windspeed
          alectov1_0128_wings:
              sensor_type: windgusts
          firstline_00fc_temp:
              sensor_type: temperature
    - platform: onewire
      names:
          28-0000059319c4: Bedroom



binary_sensor:
    - platform: rpi_gpio
      ports:
        25: backdoor
        17: bedroomwindow_right
        22: bedroomwindow_left
      pull_mode: DOWN
      invert_logic: true
      bouncetime: 60
      device_class: opening

switch:
  - platform: command_line
    switches:
        kodi:
            command_on: "killall kodi-standalone kodi kodi_v7.bin; kodi-standalone &"
            command_off: "killall kodi-standalone kodi kodi_v7.bin"
            command_state: "ps aux | grep kodi | grep -v grep"
        xorg:
            command_on: "killall Xorg; startx &"
            command_off: "killall Xorg"
            command_state: "ps aux | grep Xorg | grep -v grep"
        musicplayer:
            command_on: "killall vlc; cvlc http://192.168.0.1:8000/stream.mp3 >/dev/null 2>/dev/null &"
            command_off: "killall vlc"
            command_state: "ps aux | grep vlc | grep -v grep"
  - platform: rflink
    devices:
        aster_0f80_02: #ON = stop ceiling fan, OFF = toggle light
            name: aster_0f80_02
        aster_0f88_01: #ON = ..., OFF = Level 1
            name: aster_0f88_01
        aster_0f88_02: #ON = level 2, OFF = ....
            name: aster_0f88_02
        aster_0f90_01: #ON = ..., OFF = level 3
            name: aster_0f90_01
        aster_0f98_01: #ON = ..., OFF = level 4
            name: aster_0f98_01
        aster_0fa0_02: #ON = level 5, OFF = ....
            name: aster_0fa0_02
        aster_0fa0_01: #ON = ...., OFF = level 6
            name: aster_0fa0_01

automation:
######### SENSOR PROPAGATION SLAVE->MASTER (MQTT) #########
  - id: s2m_backdoor
    alias: s2m_backdoor
    hide_entity: true
    trigger:
        - platform: state
          entity_id: binary_sensor.backdoor
        - platform: homeassistant
          event: start
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/binary_sensor/backdoor"
            payload: "{{ states('binary_sensor.backdoor') | upper }}"

  - id: s2m_bedroomwindow_right
    alias: s2m_bedroomwindow_right
    hide_entity: true
    trigger:
        - platform: state
          entity_id: binary_sensor.bedroomwindow_right
        - platform: homeassistant
          event: start
        - platform: mqtt
          topic: home/poll
    action:
        service: mqtt.publish
        data_template:
            topic: "home/binary_sensor/bedroomwindow_right"
            payload: "{{ states('binary_sensor.bedroomwindow_right') | upper }}"
  - id: s2m_bedroomwindow_left
    alias: s2m_bedroomwindow_left
    hide_entity: true
    trigger:
        - platform: state
          entity_id: binary_sensor.bedroomwindow_left
        - platform: homeassistant
          event: start
        - platform: mqtt
          topic: home/poll
    action:
        service: mqtt.publish
        data_template:
            topic: "home/binary_sensor/bedroomwindow_left"
            payload: "{{ states('binary_sensor.bedroomwindow_left') | upper }}"
  - id: ir_send
    alias: IR Send
    trigger:
        platform: mqtt
        topic: "home/ir_send/pi2"
    action:
        service: shell_command.ir_send
        data_template:
            device: '{{ trigger.payload_json.device }}'
            key: '{{ trigger.payload_json.key }}'
  - id: 433send
    alias: 433send
    trigger:
        platform: mqtt
        topic: "home/433send/set/pi2/#"
    action:
        - service: shell_command.433send
          data_template:
             protocol: '{{ trigger.topic.split("/")[-3] }}'
             group: '{{ trigger.topic.split("/")[-2] }}'
             unit: '{{ trigger.topic.split("/")[-1] }}'
             state: '{{ trigger.payload|lower }}'
        - service: mqtt.publish
          data_template:
              topic: "home/433send/get/{{ trigger.topic.split('/')[-3] }}/{{ trigger.topic.split('/')[-2] }}/{{ trigger.topic.split('/')[-1] }}"
              payload: '{{ trigger.payload }}'
  - id: hdmi_cec_send
    alias: HDMI CEC Send
    trigger:
        platform: mqtt
        topic: "home/hdmi_cec_send/pi2"
    action:
        service: shell_command.hdmi_cec_send
        data_template:
            payload: '{{ trigger.payload }}'
  - id: technofire
    alias: Technofire
    trigger:
        platform: mqtt
        topic: "home/technofire/pi2/set"
    action:
        - service: shell_command.technofire
          data_template:
             scene: '{{ trigger.payload_json.scene }}'
             brightness: '{{ trigger.payload_json.brightness }}'
        - service: mqtt.publish
          data_template:
              topic: "home/technofire/pi2/get"
              payload: '{{ trigger.payload_json.scene }}'
  - id: s2m_kodi
    alias: s2m_kodi
    trigger:
        - platform: state
          entity_id: switch.kodi
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/kodi/get/pi2"
            payload: "{{ states('switch.kodi') | upper }}"
  - id: s2m_xorg
    alias: s2m_xorg
    trigger:
        - platform: state
          entity_id: switch.xorg
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/xorg/get/pi2"
            payload: "{{ states('switch.xorg') | upper }}"
  - id: m2s_kodi
    alias: m2s_kodi
    trigger:
        platform: mqtt
        topic: "home/kodi/set/pi2"
    action:
        service_template: switch.turn_{{trigger.payload|lower}}
        entity_id: switch.kodi
  - id: m2s_xorg
    alias: m2s_xorg
    trigger:
        platform: mqtt
        topic: "home/xorg/set/pi2"
    action:
        service_template: switch.turn_{{trigger.payload|lower}}
        entity_id: switch.kodi
  - id: m2s_wakeup
    alias: m2s_wakeup
    trigger:
        platform: mqtt
        topic: "home/wakeup/pi2"
    action:
        service_template: shell_command.wakeup
  - id: s2m_weatherstation_rain
    alias: s2m_weatherstation_rain
    trigger:
        - platform: state
          entity_id: sensor.alectov1_008f_raintot
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/weatherstation/rain"
            payload: "{{ states('sensor.alectov1_008f_rain')}}"
  - id: s2m_weatherstation_temp
    alias: s2m_weatherstation_temp
    trigger:
        - platform: state
          entity_id: sensor.alectov1_0128_temp
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/weatherstation/temp"
            payload: "{{ states('sensor.alectov1_0128_temp') }}"
  - id: s2m_weatherstation2_temp
    alias: s2m_weatherstation2_temp
    trigger:
        - platform: state
          entity_id: sensor.firstline_00fc_temp
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/weatherstation2/temp"
            payload: "{{ states('sensor.firstline_00fc_temp') }}"
  - id: s2m_weatherstation_hum
    alias: s2m_weatherstation_hum
    trigger:
        - platform: state
          entity_id: sensor.alectov1_0128_hum
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/weatherstation/hum"
            payload: "{{ states('sensor.alectov1_0128_hum') }}"
  - id: s2m_weatherstation_winddir
    alias: s2m_weatherstation_winddir
    trigger:
        - platform: state
          entity_id: sensor.alectov1_0128_windir
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/weatherstation/winddir"
            payload: "{{ states('sensor.alectov1_0128_windir') }}"
  - id: s2m_weatherstation_winsp
    alias: s2m_weatherstation_winsp
    trigger:
        - platform: state
          entity_id: sensor.alectov1_0128_winsp
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/weatherstation/windspeed"
            payload: "{{ states('sensor.alectov1_0128_winsp')  }}"
  - id: s2m_weatherstation_wings
    alias: s2m_weatherstation_wings
    trigger:
        - platform: state
          entity_id: sensor.alectov1_0128_wings
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/weatherstation/windgustspeed"
            payload: "{{ states('sensor.alectov1_0128_wings') }}"
  - id: m2s_fan_off
    alias: m2s_fan_off
    trigger:
        platform: mqtt
        topic: "home/fan"
        payload: "off"
    action:
        service: switch.turn_on
        entity_id: switch.aster_0f80_02
  - id: m2s_fan_1
    alias: m2s_fan_1
    trigger:
        platform: mqtt
        topic: "home/fan"
        payload: "1"
    action:
        service: switch.turn_off
        entity_id: switch.aster_0f88_01
  - id: m2s_fan_2
    alias: m2s_fan_2
    trigger:
        platform: mqtt
        topic: "home/fan"
        payload: "2"
    action:
        service: switch.turn_on
        entity_id: switch.aster_0f88_02
  - id: m2s_fan_3
    alias: m2s_fan_3
    trigger:
        platform: mqtt
        topic: "home/fan"
        payload: "3"
    action:
        service: switch.turn_off
        entity_id: switch.aster_0f90_01
  - id: m2s_fan_4
    alias: m2s_fan_4
    trigger:
        platform: mqtt
        topic: "home/fan"
        payload: "4"
    action:
        service: switch.turn_off
        entity_id: switch.aster_0f98_01
  - id: m2s_fan_5
    alias: m2s_fan_5
    trigger:
        platform: mqtt
        topic: "home/fan"
        payload: "5"
    action:
        service: switch.turn_on
        entity_id: switch.aster_0fa0_02
  - id: m2s_fan_6
    alias: m2s_fan_6
    trigger:
        platform: mqtt
        topic: "home/fan"
        payload: "6"
    action:
        service: switch.turn_off
        entity_id: switch.aster_0fa0_01
  - id: s2m_bedroom_temperature
    alias: s2m_bedroom_temperature
    trigger:
        - platform: state
          entity_id: sensor.bedroom_temperature
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/sensor/bedroom_temperature"
            payload: "{{ states('sensor.bedroom_temperature') }}"
  - id: s2m_musicplayer
    alias: s2m_musicplayer
    trigger:
        - platform: state
          entity_id: switch.musicplayer
        - platform: mqtt
          topic: home/poll #an explicit re-poll of states, issued by master when it starts
    action:
        service: mqtt.publish
        data_template:
            topic: "home/musicplayer/get/pi2"
            payload: "{{ states('switch.musicplayer') | upper }}"
  - id: m2s_musicplayer_on
    alias: m2s_musicplayer_on
    trigger:
        platform: mqtt
        topic: "home/musicplayer/set/pi2"
        payload: 'ON'
    action:
        service_template: switch.turn_on
        entity_id: switch.musicplayer
  - id: m2s_musicplayer_off
    alias: m2s_musicplayer_off
    trigger:
        platform: mqtt
        topic: "home/musicplayer/set/pi2"
        payload: 'OFF'
    action:
        service_template: switch.turn_off
        entity_id: switch.musicplayer
  - id: m2s_say
    alias: m2s_say
    trigger:
        platform: mqtt
        topic: "home/say/pi2"
    action:
      - service: tts.picotts_say
        entity_id: media_player.speaker
        data_template:
            message: '{{ trigger.payload }}'
  - id: m2s_soundoutput_speakers
    alias: m2s_soundoutput_speakers
    trigger:
        platform: mqtt
        topic: "home/soundoutput/pi2"
        payload: 'speakers'
    action:
        service: shell_command.soundoutput
        data:
            outputid: '1'
  - id: m2s_soundoutput_hdmi
    alias: m2s_soundoutput_hdmi
    trigger:
        platform: mqtt
        topic: "home/soundoutput/pi2"
        payload: 'hdmi'
    action:
        service: shell_command.soundoutput
        data:
            outputid: '2'

media_player speaker:
    - platform: vlc
      name: speaker
      arguments: '--alsa-audio-device=hw:0,0'

shell_command:
    start_pycec: python -m pycec
    ir_send: /home/homeautomation/homeassistant/scripts/media/irsend.sh "{{ device }}" "{{ key }}"
    433send: /home/homeautomation/homeassistant/scripts/switch/433send.sh 4 "{{ protocol }}" "{{ group }}" "{{ unit }}" "{{ state }}"
    hdmi_cec_send: /home/homeautomation/homeassistant/scripts/media/hdmicecsend.sh "{{ payload }}"
    technofire: 'sudo /home/homeautomation/homeassistant/scripts/technofire/technofire.sh {{ scene.replace(" ","_") | lower }} {{ brightness }}'
    wakeup: sudo /home/homeautomation/homeassistant/scripts/wakeup/wakeup.xinit.sh

#MQTT
mqtt:
    broker: 192.168.0.1
    port: 8883
    client_id: pi2
    certificate: /etc/ssl/certs/ca-certificates.crt
    tls_insecure: true #allow non-matching hostnames
    keepalive: 60
    username: homeassistant
    password: !secret api_password

#mqtt_eventstream:
#  publish_topic: slaves/pi2
#  subscribe_topic: master
