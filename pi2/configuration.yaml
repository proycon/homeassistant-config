homeassistant:
  # Name of the location where Home Assistant is running
  name: Pi2
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 161
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Amsterdam




http:
  # Uncomment this to add a password (recommended!)
  api_password: !secret api_password
  # use_x_forwarded_for: True
  # Uncomment this if you are using SSL or running in Docker etc
  # base_url: example.duckdns.org:8123

frontend:

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
#updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
#conversation:

# Enables support for tracking state changes over time.
#history:

# View all events in a logbook
#logbook:

# Track the sun
#sun:

# Weather Prediction
#sensor:
#  platform: yr


binary_sensor:
    - platform: rpi_gpio
      ports:
        25: backdoor
        17: bedroomwindow_right
        22: bedroomwindow_left
      pull_mode: DOWN
      invert_logic: true
      bouncetime: 60
      device_class: opening


switch:
    platform: command_line
    switches: !include rf_lights.yaml

######### SENSOR PROPAGATION SLAVE->MASTER (MQTT) #########
automation s2m_backdoor:
    hide_entity: true
    trigger:
        platform: state
        entity_id: binary_sensor.backdoor
    action:
        service: mqtt.publish
        data:
            topic: "home/binary_sensor/backdoor"
            payload_template: "{{ states('binary_sensor.backdoor') | upper }}"

automation s2m_bedroomwindow_right:
    hide_entity: true
    trigger:
        platform: state
        entity_id: binary_sensor.bedroomwindow_right
    action:
        service: mqtt.publish
        data:
            topic: "home/binary_sensor/bedroomwindow_right"
            payload_template: "{{ states('binary_sensor.bedroomwindow_right') | upper }}"

automation s2m_bedroomwindow_left:
    hide_entity: true
    trigger:
        platform: state
        entity_id: binary_sensor.bedroomwindow_left
    action:
        service: mqtt.publish
        data:
            topic: "home/binary_sensor/bedroomwindow_left"
            payload_template: "{{ states('binary_sensor.bedroomwindow_left') | upper }}"

######### SWITCH PROPAGATION SLAVE->MASTER and MASTER->SLAVE (MQTT) #########
automation s2m_office:
    hide_entity: true
    trigger:
        platform: state
        entity_id: switch.office
    action:
        service: mqtt.publish
        data:
            topic: "home/switch/office"
            payload_template: "{{ states('switch.office') | upper }}"

automation m2s_office:
     hide_entity: true
     trigger:
        platform: mqtt
        topic: "home/switch/office"
     action:
        service_template: switch.turn_{{ trigger.payload | string | lower }}
        entity_id: switch.office


#MQTT
mqtt:
    broker: 192.168.0.1
    port: 1883
    client_id: pi2
    keepalive: 60
    username: homeassistant
    password: !secret api_password

#mqtt_eventstream:
#  publish_topic: slaves/pi2
#  subscribe_topic: master
